

######################
#### bedr v1.0.7 ####
######################

checking binary availability...
  * Checking path for bedtools... PASS
    /shen/shenlabstore3/neng/dependencies/anaconda3/envs/EnhancerSwitch/bin/bedtools
  * Checking path for bedops... PASS
    /shen/shenlabstore3/neng/dependencies/anaconda3/envs/EnhancerSwitch/bin/bedops
  * Checking path for tabix... PASS
    /shen/shenlabstore3/neng/dependencies/anaconda3/envs/EnhancerSwitch/bin/tabix
tests and examples will be skipped on R CMD check if binaries are missing

Loading required package: grid
========================================
ComplexHeatmap version 2.2.0
Bioconductor page: http://bioconductor.org/packages/ComplexHeatmap/
Github page: https://github.com/jokergoo/ComplexHeatmap
Documentation: http://jokergoo.github.io/ComplexHeatmap-reference

If you use it in published research, please cite:
Gu, Z. Complex heatmaps reveal patterns and correlations in multidimensional 
  genomic data. Bioinformatics 2016.
========================================

========================================
circlize version 0.4.10
CRAN page: https://cran.r-project.org/package=circlize
Github page: https://github.com/jokergoo/circlize
Documentation: https://jokergoo.github.io/circlize_book/book/

If you use it in published research, please cite:
Gu, Z. circlize implements and enhances circular visualization
  in R. Bioinformatics 2014.

This message can be suppressed by:
  suppressPackageStartupMessages(library(circlize))
========================================


Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.3 
Warning message:
package ‘tibble’ was built under R version 3.6.3 

Attaching package: ‘distributions3’

The following objects are masked from ‘package:stats’:

    Gamma, quantile

The following object is masked from ‘package:grDevices’:

    pdf

SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290170a0eda.bed -b /tmp/RtmpTQN7LL/b_329074369849.bed -u
[1] 112
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329084c918e.bed -b /tmp/RtmpTQN7LL/b_329066fe35a4.bed -u
[1] 133
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329062e53b33.bed -b /tmp/RtmpTQN7LL/b_32902f71266a.bed -u
[1] 177
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329056564be6.bed -b /tmp/RtmpTQN7LL/b_32903cfd7c73.bed -u
[1] 173
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290fc26b13.bed -b /tmp/RtmpTQN7LL/b_3290246b3c52.bed -u
[1] 131
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290184ba4ff.bed -b /tmp/RtmpTQN7LL/b_32901cb1159f.bed -u
[1] 177
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329062684b2f.bed -b /tmp/RtmpTQN7LL/b_32906f2163fc.bed -u
[1] 141
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905ff1120.bed -b /tmp/RtmpTQN7LL/b_329035e385ca.bed -u
[1] 104
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040e68c7a.bed -b /tmp/RtmpTQN7LL/b_329034010447.bed -u
[1] 190
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290d082ac5.bed -b /tmp/RtmpTQN7LL/b_329011817381.bed -u
[1] 171
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329073a91ea6.bed -b /tmp/RtmpTQN7LL/b_329056cc1f0f.bed -u
[1] 112
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905265cd03.bed -b /tmp/RtmpTQN7LL/b_329029cc91f2.bed -u
[1] 160
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901e2eafa6.bed -b /tmp/RtmpTQN7LL/b_32902366d26.bed -u
[1] 189
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c074f31.bed -b /tmp/RtmpTQN7LL/b_32905c3c80b8.bed -u
[1] 152
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329064ebb10.bed -b /tmp/RtmpTQN7LL/b_329033d1a560.bed -u
[1] 201
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329011f96f09.bed -b /tmp/RtmpTQN7LL/b_32907e3d332.bed -u
[1] 159
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904a729541.bed -b /tmp/RtmpTQN7LL/b_329029a818d1.bed -u
[1] 153
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906d6de0cb.bed -b /tmp/RtmpTQN7LL/b_32901df0729f.bed -u
[1] 142
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b7766c3.bed -b /tmp/RtmpTQN7LL/b_32904c37acd0.bed -u
[1] 184
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907c71258e.bed -b /tmp/RtmpTQN7LL/b_32903361d222.bed -u
[1] 168
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904a69ec5a.bed -b /tmp/RtmpTQN7LL/b_3290e2aa7a6.bed -u
[1] 176
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329027de2a11.bed -b /tmp/RtmpTQN7LL/b_329032222c55.bed -u
[1] 157
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904044f9ea.bed -b /tmp/RtmpTQN7LL/b_32908962776.bed -u
[1] 131
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901832fe51.bed -b /tmp/RtmpTQN7LL/b_3290226bca2b.bed -u
[1] 200
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904afc6dac.bed -b /tmp/RtmpTQN7LL/b_3290b2fe6f.bed -u
[1] 148
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290670eaec.bed -b /tmp/RtmpTQN7LL/b_3290b46b0e8.bed -u
[1] 169
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902d7272b6.bed -b /tmp/RtmpTQN7LL/b_32906043c297.bed -u
[1] 130
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329058e874b3.bed -b /tmp/RtmpTQN7LL/b_32903edadc22.bed -u
[1] 103
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b1be99d.bed -b /tmp/RtmpTQN7LL/b_329024bfcfe5.bed -u
[1] 157
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031c325ce.bed -b /tmp/RtmpTQN7LL/b_329019e08140.bed -u
[1] 172
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906f9c09a2.bed -b /tmp/RtmpTQN7LL/b_329063975a47.bed -u
[1] 192
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906fa63035.bed -b /tmp/RtmpTQN7LL/b_32904cf625be.bed -u
[1] 108
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903bcd406f.bed -b /tmp/RtmpTQN7LL/b_329026051960.bed -u
[1] 189
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901414bd77.bed -b /tmp/RtmpTQN7LL/b_3290745400bd.bed -u
[1] 167
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c3a8d57.bed -b /tmp/RtmpTQN7LL/b_3290734f21a7.bed -u
[1] 142
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b7973f8.bed -b /tmp/RtmpTQN7LL/b_32906f8a7ac1.bed -u
[1] 148
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903d97a965.bed -b /tmp/RtmpTQN7LL/b_329028b0659f.bed -u
[1] 182
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290b50adf5.bed -b /tmp/RtmpTQN7LL/b_329055715265.bed -u
[1] 190
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290273c7035.bed -b /tmp/RtmpTQN7LL/b_329014b3501c.bed -u
[1] 117
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a41ce50.bed -b /tmp/RtmpTQN7LL/b_32901a74f333.bed -u
[1] 158
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329075fb3fbb.bed -b /tmp/RtmpTQN7LL/b_329022ce0bb7.bed -u
[1] 165
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906356567b.bed -b /tmp/RtmpTQN7LL/b_3290589e3b51.bed -u
[1] 147
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904da03cce.bed -b /tmp/RtmpTQN7LL/b_329073bf738.bed -u
[1] 170
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019d616df.bed -b /tmp/RtmpTQN7LL/b_3290550f6bc0.bed -u
[1] 202
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907ab6f114.bed -b /tmp/RtmpTQN7LL/b_32902be52440.bed -u
[1] 166
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329079b7e2fa.bed -b /tmp/RtmpTQN7LL/b_329049ea433c.bed -u
[1] 178
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b76fa13.bed -b /tmp/RtmpTQN7LL/b_32901286f9e3.bed -u
[1] 182
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d90953f.bed -b /tmp/RtmpTQN7LL/b_32901d87844.bed -u
[1] 157
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329077956fa3.bed -b /tmp/RtmpTQN7LL/b_32904e04e91b.bed -u
[1] 139
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b2ff6cd.bed -b /tmp/RtmpTQN7LL/b_329036a263b0.bed -u
[1] 148
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c69fb4d.bed -b /tmp/RtmpTQN7LL/b_329057d7b05f.bed -u
[1] 154
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290829c266.bed -b /tmp/RtmpTQN7LL/b_32901a056598.bed -u
[1] 146
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904154e6d5.bed -b /tmp/RtmpTQN7LL/b_32907b4873f4.bed -u
[1] 165
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067362bd8.bed -b /tmp/RtmpTQN7LL/b_32904de9a8eb.bed -u
[1] 184
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901768679.bed -b /tmp/RtmpTQN7LL/b_32906e19fb48.bed -u
[1] 165
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904443a69.bed -b /tmp/RtmpTQN7LL/b_32903e69022.bed -u
[1] 143
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329045269e6e.bed -b /tmp/RtmpTQN7LL/b_329045120ebc.bed -u
[1] 150
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329049d7b38.bed -b /tmp/RtmpTQN7LL/b_32907015d9a3.bed -u
[1] 154
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290375bf16f.bed -b /tmp/RtmpTQN7LL/b_329054abbb99.bed -u
[1] 137
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f972790.bed -b /tmp/RtmpTQN7LL/b_32907c19cc8f.bed -u
[1] 188
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329082be7dd.bed -b /tmp/RtmpTQN7LL/b_3290158e535b.bed -u
[1] 171
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c0c8a00.bed -b /tmp/RtmpTQN7LL/b_32905f6aa2d2.bed -u
[1] 182
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903f8301ac.bed -b /tmp/RtmpTQN7LL/b_329040ac587.bed -u
[1] 178
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905f10bac7.bed -b /tmp/RtmpTQN7LL/b_32907ecbe120.bed -u
[1] 178
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b1e2149.bed -b /tmp/RtmpTQN7LL/b_329056435d4a.bed -u
[1] 158
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329055e486f2.bed -b /tmp/RtmpTQN7LL/b_329075241237.bed -u
[1] 155
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904ea70e6c.bed -b /tmp/RtmpTQN7LL/b_329071118b06.bed -u
[1] 160
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290579d46cb.bed -b /tmp/RtmpTQN7LL/b_329038f77ce3.bed -u
[1] 189
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906b9f02e9.bed -b /tmp/RtmpTQN7LL/b_3290361c5b3.bed -u
[1] 143
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905681a183.bed -b /tmp/RtmpTQN7LL/b_32904310b1d.bed -u
[1] 127
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290389c5775.bed -b /tmp/RtmpTQN7LL/b_3290550f9f22.bed -u
[1] 163
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329075de9c64.bed -b /tmp/RtmpTQN7LL/b_32901f1a056e.bed -u
[1] 147
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907559067c.bed -b /tmp/RtmpTQN7LL/b_329020266ea7.bed -u
[1] 135
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290797debd9.bed -b /tmp/RtmpTQN7LL/b_32903b621fad.bed -u
[1] 169
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907d6a3db6.bed -b /tmp/RtmpTQN7LL/b_32901e1ed981.bed -u
[1] 160
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901670cad.bed -b /tmp/RtmpTQN7LL/b_32902a481b53.bed -u
[1] 145
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329018b6d49e.bed -b /tmp/RtmpTQN7LL/b_3290676a4820.bed -u
[1] 155
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290688747e4.bed -b /tmp/RtmpTQN7LL/b_329040cb373b.bed -u
[1] 142
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329014148a8b.bed -b /tmp/RtmpTQN7LL/b_329064eb636.bed -u
[1] 134
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904a8302ad.bed -b /tmp/RtmpTQN7LL/b_329066041892.bed -u
[1] 179
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f404480.bed -b /tmp/RtmpTQN7LL/b_329074fd3264.bed -u
[1] 137
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903306a02b.bed -b /tmp/RtmpTQN7LL/b_32903d5b3f6.bed -u
[1] 163
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c5109e4.bed -b /tmp/RtmpTQN7LL/b_32901a6ff55c.bed -u
[1] 164
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329073c46baf.bed -b /tmp/RtmpTQN7LL/b_3290640514b1.bed -u
[1] 130
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290107427c4.bed -b /tmp/RtmpTQN7LL/b_3290a2bd08d.bed -u
[1] 150
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903a4c9e8.bed -b /tmp/RtmpTQN7LL/b_329079042acc.bed -u
[1] 114
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329021b2050e.bed -b /tmp/RtmpTQN7LL/b_329062e21ca4.bed -u
[1] 170
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329078a57cce.bed -b /tmp/RtmpTQN7LL/b_329074ffbe23.bed -u
[1] 166
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329032894293.bed -b /tmp/RtmpTQN7LL/b_3290ce8bd8c.bed -u
[1] 165
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905f617432.bed -b /tmp/RtmpTQN7LL/b_3290638c0343.bed -u
[1] 162
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290275d8360.bed -b /tmp/RtmpTQN7LL/b_329037c25b2d.bed -u
[1] 175
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290624b3eb3.bed -b /tmp/RtmpTQN7LL/b_32902b2d1038.bed -u
[1] 112
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290346217a.bed -b /tmp/RtmpTQN7LL/b_32901947e209.bed -u
[1] 144
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907e9061f0.bed -b /tmp/RtmpTQN7LL/b_3290d65de4e.bed -u
[1] 158
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906dd99c9d.bed -b /tmp/RtmpTQN7LL/b_329021ae42fa.bed -u
[1] 200
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019e16150.bed -b /tmp/RtmpTQN7LL/b_3290132642a5.bed -u
[1] 146
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904d55fe86.bed -b /tmp/RtmpTQN7LL/b_32905475ced.bed -u
[1] 141
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329046cbfe85.bed -b /tmp/RtmpTQN7LL/b_32902187ebca.bed -u
[1] 160
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329065eb9fea.bed -b /tmp/RtmpTQN7LL/b_3290394172ad.bed -u
[1] 137
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329073b204a8.bed -b /tmp/RtmpTQN7LL/b_329025687163.bed -u
[1] 132
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329036ebe53e.bed -b /tmp/RtmpTQN7LL/b_329019ce764.bed -u
[1] 193
[1] "101 ctrl number"
$disease
[1] "T1D"

$fg.val
[1] 112

$bg.stdev
[1] 2.271714

$bg.mean
[1] 157.82

$z.score
[1] -20.1698

$p.val
[1] 1

$significant
[1] "no"

$cell.type
[1] "RightVentricle"

  disease fg.val bg.stdev bg.mean  z.score p.val significant      cell.type
1     T1D    112 2.271714  157.82 -20.1698     1          no RightVentricle
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903bb2615f.bed -b /tmp/RtmpTQN7LL/b_32906211d8d5.bed -u
[1] 84
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290134ebb99.bed -b /tmp/RtmpTQN7LL/b_329066934e54.bed -u
[1] 46
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013da6c8b.bed -b /tmp/RtmpTQN7LL/b_329048dc3d8d.bed -u
[1] 74
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c6ae6aa.bed -b /tmp/RtmpTQN7LL/b_329076473343.bed -u
[1] 75
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903832bc47.bed -b /tmp/RtmpTQN7LL/b_32906e4cec44.bed -u
[1] 51
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290374e009e.bed -b /tmp/RtmpTQN7LL/b_3290679001ca.bed -u
[1] 74
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050920e01.bed -b /tmp/RtmpTQN7LL/b_329063d8244f.bed -u
[1] 61
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901e81b631.bed -b /tmp/RtmpTQN7LL/b_3290158e4bb9.bed -u
[1] 53
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b634342.bed -b /tmp/RtmpTQN7LL/b_32904a548be5.bed -u
[1] 83
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329020f294ac.bed -b /tmp/RtmpTQN7LL/b_329044b65a24.bed -u
[1] 73
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290677c57de.bed -b /tmp/RtmpTQN7LL/b_3290601e4d84.bed -u
[1] 50
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290e41cc9d.bed -b /tmp/RtmpTQN7LL/b_32901ec7fdd4.bed -u
[1] 68
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329021f8cf43.bed -b /tmp/RtmpTQN7LL/b_3290a329e46.bed -u
[1] 71
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a77095c.bed -b /tmp/RtmpTQN7LL/b_32905c6b8100.bed -u
[1] 75
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903eabd1b1.bed -b /tmp/RtmpTQN7LL/b_32907294a0e.bed -u
[1] 72
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329010b320fa.bed -b /tmp/RtmpTQN7LL/b_32901375e859.bed -u
[1] 70
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290ccaf543.bed -b /tmp/RtmpTQN7LL/b_32906caa5044.bed -u
[1] 70
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903648ca8b.bed -b /tmp/RtmpTQN7LL/b_329079b6e2e4.bed -u
[1] 56
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903a4af1c7.bed -b /tmp/RtmpTQN7LL/b_329014046c32.bed -u
[1] 75
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901394e6fb.bed -b /tmp/RtmpTQN7LL/b_3290432596c5.bed -u
[1] 87
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904fb97e39.bed -b /tmp/RtmpTQN7LL/b_32905edf2e64.bed -u
[1] 80
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290afd3783.bed -b /tmp/RtmpTQN7LL/b_32907fde9740.bed -u
[1] 74
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a2ccfc3.bed -b /tmp/RtmpTQN7LL/b_32905a0ac82c.bed -u
[1] 78
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329070906cec.bed -b /tmp/RtmpTQN7LL/b_329061979534.bed -u
[1] 87
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072d5fefb.bed -b /tmp/RtmpTQN7LL/b_329068b7bd5b.bed -u
[1] 65
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329079de8eff.bed -b /tmp/RtmpTQN7LL/b_32901d5cf29e.bed -u
[1] 69
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904e48a9ea.bed -b /tmp/RtmpTQN7LL/b_32906549e22c.bed -u
[1] 50
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072bccdcc.bed -b /tmp/RtmpTQN7LL/b_32907702a5d0.bed -u
[1] 48
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290563953dd.bed -b /tmp/RtmpTQN7LL/b_32907818222a.bed -u
[1] 60
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b3a37f3.bed -b /tmp/RtmpTQN7LL/b_32903080a8f4.bed -u
[1] 85
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904890c07b.bed -b /tmp/RtmpTQN7LL/b_329023523eec.bed -u
[1] 94
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072e36fb8.bed -b /tmp/RtmpTQN7LL/b_329072e9f2f9.bed -u
[1] 50
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290602dcd82.bed -b /tmp/RtmpTQN7LL/b_32902968babd.bed -u
[1] 98
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906cd54138.bed -b /tmp/RtmpTQN7LL/b_32901eaa6c03.bed -u
[1] 68
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329046f1f7f4.bed -b /tmp/RtmpTQN7LL/b_3290747dd51e.bed -u
[1] 61
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901eaa313b.bed -b /tmp/RtmpTQN7LL/b_3290468b0f66.bed -u
[1] 56
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906663c9a.bed -b /tmp/RtmpTQN7LL/b_329038377745.bed -u
[1] 79
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290517082b8.bed -b /tmp/RtmpTQN7LL/b_32907a05df68.bed -u
[1] 82
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290475f759.bed -b /tmp/RtmpTQN7LL/b_32907deda73e.bed -u
[1] 41
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905c9728c1.bed -b /tmp/RtmpTQN7LL/b_32906af6466f.bed -u
[1] 74
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906772f6bc.bed -b /tmp/RtmpTQN7LL/b_32903d710889.bed -u
[1] 72
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905490475.bed -b /tmp/RtmpTQN7LL/b_329065980f35.bed -u
[1] 83
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c376bd3.bed -b /tmp/RtmpTQN7LL/b_32902ef84ade.bed -u
[1] 83
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901842593b.bed -b /tmp/RtmpTQN7LL/b_329026dbba7a.bed -u
[1] 93
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ba6b9fe.bed -b /tmp/RtmpTQN7LL/b_329061976e73.bed -u
[1] 75
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906bdf5156.bed -b /tmp/RtmpTQN7LL/b_32904de76bac.bed -u
[1] 65
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290bde7bbd.bed -b /tmp/RtmpTQN7LL/b_329064fbbd5d.bed -u
[1] 68
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907adf5c07.bed -b /tmp/RtmpTQN7LL/b_32905fd437f5.bed -u
[1] 78
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906b918f8b.bed -b /tmp/RtmpTQN7LL/b_3290571dfbfc.bed -u
[1] 65
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290161f4546.bed -b /tmp/RtmpTQN7LL/b_32902d1214a5.bed -u
[1] 83
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290472f8d3a.bed -b /tmp/RtmpTQN7LL/b_32902eb5434e.bed -u
[1] 82
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290488cb869.bed -b /tmp/RtmpTQN7LL/b_32907e157368.bed -u
[1] 75
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061e93b89.bed -b /tmp/RtmpTQN7LL/b_3290221b581a.bed -u
[1] 78
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329060a423e8.bed -b /tmp/RtmpTQN7LL/b_3290624ba2e8.bed -u
[1] 84
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906397d492.bed -b /tmp/RtmpTQN7LL/b_329087c8baf.bed -u
[1] 74
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329070073613.bed -b /tmp/RtmpTQN7LL/b_329027a77494.bed -u
[1] 55
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290777815ab.bed -b /tmp/RtmpTQN7LL/b_329045436a94.bed -u
[1] 56
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906e0438e2.bed -b /tmp/RtmpTQN7LL/b_329064882f6a.bed -u
[1] 76
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c80fdce.bed -b /tmp/RtmpTQN7LL/b_3290c06336a.bed -u
[1] 58
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329077919b45.bed -b /tmp/RtmpTQN7LL/b_32904b3edaeb.bed -u
[1] 78
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290513b8ddc.bed -b /tmp/RtmpTQN7LL/b_329058a7d172.bed -u
[1] 70
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906fc0054a.bed -b /tmp/RtmpTQN7LL/b_32902b23b78c.bed -u
[1] 69
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d25862.bed -b /tmp/RtmpTQN7LL/b_32902b5cec4b.bed -u
[1] 68
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c20c0e7.bed -b /tmp/RtmpTQN7LL/b_32907bcc8d98.bed -u
[1] 76
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d7cf7e9.bed -b /tmp/RtmpTQN7LL/b_32905be2ba97.bed -u
[1] 75
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907ea519d.bed -b /tmp/RtmpTQN7LL/b_32904d2c3cff.bed -u
[1] 71
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b875ab6.bed -b /tmp/RtmpTQN7LL/b_32901cd75cf3.bed -u
[1] 64
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904b2af16.bed -b /tmp/RtmpTQN7LL/b_329016ed2520.bed -u
[1] 72
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32908cefc30.bed -b /tmp/RtmpTQN7LL/b_3290dbc0ac9.bed -u
[1] 74
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329079ba8b35.bed -b /tmp/RtmpTQN7LL/b_32906274a7e.bed -u
[1] 59
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905415043f.bed -b /tmp/RtmpTQN7LL/b_329022ae8515.bed -u
[1] 66
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290341b18ef.bed -b /tmp/RtmpTQN7LL/b_329012ea5a59.bed -u
[1] 80
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019111bfd.bed -b /tmp/RtmpTQN7LL/b_32904c6828a4.bed -u
[1] 58
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290894e534.bed -b /tmp/RtmpTQN7LL/b_329014bed921.bed -u
[1] 76
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a2bcfa9.bed -b /tmp/RtmpTQN7LL/b_329076b8f009.bed -u
[1] 70
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906f8fc9f0.bed -b /tmp/RtmpTQN7LL/b_32903cf69f62.bed -u
[1] 67
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329058dc07f3.bed -b /tmp/RtmpTQN7LL/b_329020bd399e.bed -u
[1] 54
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290fefbf6c.bed -b /tmp/RtmpTQN7LL/b_32905763a30e.bed -u
[1] 51
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290783601fd.bed -b /tmp/RtmpTQN7LL/b_329053707b64.bed -u
[1] 44
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901f489aac.bed -b /tmp/RtmpTQN7LL/b_329031fe6c5f.bed -u
[1] 74
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329043955377.bed -b /tmp/RtmpTQN7LL/b_3290210e9bfe.bed -u
[1] 55
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907c8ab0b2.bed -b /tmp/RtmpTQN7LL/b_32902d01817.bed -u
[1] 76
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906130f2f4.bed -b /tmp/RtmpTQN7LL/b_32906df51ea4.bed -u
[1] 72
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c9984be.bed -b /tmp/RtmpTQN7LL/b_32902315ff85.bed -u
[1] 75
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904e8f2e51.bed -b /tmp/RtmpTQN7LL/b_3290245c3bf3.bed -u
[1] 72
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905db53916.bed -b /tmp/RtmpTQN7LL/b_329056dc384e.bed -u
[1] 57
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329041fa7f9a.bed -b /tmp/RtmpTQN7LL/b_3290b88dc6e.bed -u
[1] 69
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329054494350.bed -b /tmp/RtmpTQN7LL/b_32904453f2a1.bed -u
[1] 57
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290593c8589.bed -b /tmp/RtmpTQN7LL/b_3290e2f76f6.bed -u
[1] 63
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c0de21d.bed -b /tmp/RtmpTQN7LL/b_329043545646.bed -u
[1] 70
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290323f5db3.bed -b /tmp/RtmpTQN7LL/b_329066d99e23.bed -u
[1] 86
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902ca2446e.bed -b /tmp/RtmpTQN7LL/b_329034723a2a.bed -u
[1] 51
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329070219cb6.bed -b /tmp/RtmpTQN7LL/b_3290188f9967.bed -u
[1] 60
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905e2357d7.bed -b /tmp/RtmpTQN7LL/b_329039ad3480.bed -u
[1] 64
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329017c76022.bed -b /tmp/RtmpTQN7LL/b_32902ab53d4d.bed -u
[1] 85
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904e686c08.bed -b /tmp/RtmpTQN7LL/b_32901177dafe.bed -u
[1] 47
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f1e711e.bed -b /tmp/RtmpTQN7LL/b_3290197f9856.bed -u
[1] 55
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040cbbfd.bed -b /tmp/RtmpTQN7LL/b_329024f7a0d9.bed -u
[1] 80
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031a8a60f.bed -b /tmp/RtmpTQN7LL/b_32904f547c27.bed -u
[1] 54
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329051218a60.bed -b /tmp/RtmpTQN7LL/b_3290321803cc.bed -u
[1] 56
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a1a5995.bed -b /tmp/RtmpTQN7LL/b_32905c821912.bed -u
[1] 77
[1] "101 ctrl number"
$disease
[1] "T1D"

$fg.val
[1] 84

$bg.stdev
[1] 1.203619

$bg.mean
[1] 68.83

$z.score
[1] 12.60366

$p.val
[1] 0.000000000000000000000000000000000001007856

$significant
[1] "yes"

$cell.type
[1] "Alpha"

  disease fg.val bg.stdev bg.mean   z.score
1     T1D    112 2.271714  157.82 -20.16980
2     T1D     84 1.203619   68.83  12.60366
                                         p.val significant      cell.type
1 1.000000000000000000000000000000000000000000          no RightVentricle
2 0.000000000000000000000000000000000001007856        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329044334aaa.bed -b /tmp/RtmpTQN7LL/b_329037468ec.bed -u
[1] 103
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290487e4c8c.bed -b /tmp/RtmpTQN7LL/b_32907cb554ad.bed -u
[1] 43
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903bb1fd15.bed -b /tmp/RtmpTQN7LL/b_32905da69b5b.bed -u
[1] 70
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329063262e10.bed -b /tmp/RtmpTQN7LL/b_329058587640.bed -u
[1] 73
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290203655e6.bed -b /tmp/RtmpTQN7LL/b_329028e5aeb8.bed -u
[1] 50
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290122cd9ca.bed -b /tmp/RtmpTQN7LL/b_32902119648.bed -u
[1] 71
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905e1b29ee.bed -b /tmp/RtmpTQN7LL/b_32903362608e.bed -u
[1] 55
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901197d005.bed -b /tmp/RtmpTQN7LL/b_329025656be4.bed -u
[1] 52
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902968ca9a.bed -b /tmp/RtmpTQN7LL/b_32902f8f727d.bed -u
[1] 77
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050dc4e90.bed -b /tmp/RtmpTQN7LL/b_3290611588ea.bed -u
[1] 70
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c5a4db4.bed -b /tmp/RtmpTQN7LL/b_329048deda1e.bed -u
[1] 49
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903726d746.bed -b /tmp/RtmpTQN7LL/b_32906ebf4afd.bed -u
[1] 65
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c1d40e9.bed -b /tmp/RtmpTQN7LL/b_32902aeb1994.bed -u
[1] 69
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901ae2c487.bed -b /tmp/RtmpTQN7LL/b_32902f208684.bed -u
[1] 70
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329060b9ddd3.bed -b /tmp/RtmpTQN7LL/b_32906f97ee81.bed -u
[1] 68
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905365bc65.bed -b /tmp/RtmpTQN7LL/b_32904d8d2cdc.bed -u
[1] 70
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290436abff0.bed -b /tmp/RtmpTQN7LL/b_32906e9f72cc.bed -u
[1] 70
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b0af61f.bed -b /tmp/RtmpTQN7LL/b_3290702130c9.bed -u
[1] 53
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904842a65d.bed -b /tmp/RtmpTQN7LL/b_329057f6a282.bed -u
[1] 67
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32908470092.bed -b /tmp/RtmpTQN7LL/b_32902171bb63.bed -u
[1] 81
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905077964.bed -b /tmp/RtmpTQN7LL/b_32901a98a35e.bed -u
[1] 75
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329035256cdf.bed -b /tmp/RtmpTQN7LL/b_3290723b61e.bed -u
[1] 73
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ba4a979.bed -b /tmp/RtmpTQN7LL/b_32901a5ebc31.bed -u
[1] 76
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903f25417c.bed -b /tmp/RtmpTQN7LL/b_3290fb908d6.bed -u
[1] 79
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329045e9170b.bed -b /tmp/RtmpTQN7LL/b_329028eec4d1.bed -u
[1] 62
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904243a0b3.bed -b /tmp/RtmpTQN7LL/b_32906df28f0a.bed -u
[1] 64
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329065f4eb7a.bed -b /tmp/RtmpTQN7LL/b_3290747ec304.bed -u
[1] 45
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329073a24377.bed -b /tmp/RtmpTQN7LL/b_329020982ea6.bed -u
[1] 48
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031716cc5.bed -b /tmp/RtmpTQN7LL/b_32904515654d.bed -u
[1] 53
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907d96fb35.bed -b /tmp/RtmpTQN7LL/b_3290628bc66d.bed -u
[1] 78
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329076b4e36b.bed -b /tmp/RtmpTQN7LL/b_3290f3aeb84.bed -u
[1] 86
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329010ea5733.bed -b /tmp/RtmpTQN7LL/b_32906378d074.bed -u
[1] 49
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b8fc8b4.bed -b /tmp/RtmpTQN7LL/b_3290625dfdaf.bed -u
[1] 93
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903b97ed17.bed -b /tmp/RtmpTQN7LL/b_3290232ccc09.bed -u
[1] 60
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905721dc71.bed -b /tmp/RtmpTQN7LL/b_32907cb604a2.bed -u
[1] 59
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290467d4c1e.bed -b /tmp/RtmpTQN7LL/b_32901fe3b632.bed -u
[1] 52
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902dc18aba.bed -b /tmp/RtmpTQN7LL/b_3290537dfe6a.bed -u
[1] 78
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907f109f9.bed -b /tmp/RtmpTQN7LL/b_3290134dca86.bed -u
[1] 78
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905aaf438a.bed -b /tmp/RtmpTQN7LL/b_32905ac69000.bed -u
[1] 40
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906f346f08.bed -b /tmp/RtmpTQN7LL/b_32904b53a729.bed -u
[1] 73
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902aa41b22.bed -b /tmp/RtmpTQN7LL/b_3290318eb33.bed -u
[1] 70
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290456f15b9.bed -b /tmp/RtmpTQN7LL/b_32907b2428cc.bed -u
[1] 81
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059d6b95d.bed -b /tmp/RtmpTQN7LL/b_329078b57bee.bed -u
[1] 75
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329077d0002c.bed -b /tmp/RtmpTQN7LL/b_3290487d7cd0.bed -u
[1] 90
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907b9bd599.bed -b /tmp/RtmpTQN7LL/b_32907e284dff.bed -u
[1] 69
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290268e81ab.bed -b /tmp/RtmpTQN7LL/b_32901cddd2dc.bed -u
[1] 61
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903bae605c.bed -b /tmp/RtmpTQN7LL/b_32906cafd142.bed -u
[1] 67
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906d8ae80e.bed -b /tmp/RtmpTQN7LL/b_3290d7897c.bed -u
[1] 76
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329051426fdd.bed -b /tmp/RtmpTQN7LL/b_329032da6ced.bed -u
[1] 58
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905fd67897.bed -b /tmp/RtmpTQN7LL/b_32903972513b.bed -u
[1] 73
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022eb8663.bed -b /tmp/RtmpTQN7LL/b_3290541a6b1c.bed -u
[1] 77
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053e62a4a.bed -b /tmp/RtmpTQN7LL/b_3290ae191a9.bed -u
[1] 74
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050432f24.bed -b /tmp/RtmpTQN7LL/b_329028446d15.bed -u
[1] 72
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290109af69.bed -b /tmp/RtmpTQN7LL/b_3290273cbe9d.bed -u
[1] 80
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329046d8532b.bed -b /tmp/RtmpTQN7LL/b_32906a1edce6.bed -u
[1] 70
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902e40ac6e.bed -b /tmp/RtmpTQN7LL/b_3290553f4408.bed -u
[1] 53
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903d9f452f.bed -b /tmp/RtmpTQN7LL/b_3290653cfa1e.bed -u
[1] 52
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903ea8135a.bed -b /tmp/RtmpTQN7LL/b_3290a33cc92.bed -u
[1] 75
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906acbf30.bed -b /tmp/RtmpTQN7LL/b_329039d32030.bed -u
[1] 53
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013e3d117.bed -b /tmp/RtmpTQN7LL/b_329070ee5c5e.bed -u
[1] 74
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904483ad77.bed -b /tmp/RtmpTQN7LL/b_3290421c6177.bed -u
[1] 66
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905f59c15a.bed -b /tmp/RtmpTQN7LL/b_32903abcc9bd.bed -u
[1] 69
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906cf8357e.bed -b /tmp/RtmpTQN7LL/b_329067dfe71d.bed -u
[1] 63
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069c88a63.bed -b /tmp/RtmpTQN7LL/b_3290bfd3e68.bed -u
[1] 66
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290779676c.bed -b /tmp/RtmpTQN7LL/b_329077adf9e9.bed -u
[1] 70
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32909548f88.bed -b /tmp/RtmpTQN7LL/b_32901eefc6a0.bed -u
[1] 69
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329043055405.bed -b /tmp/RtmpTQN7LL/b_329033a238e6.bed -u
[1] 59
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a6d9c7.bed -b /tmp/RtmpTQN7LL/b_329061feae9b.bed -u
[1] 67
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903ac6c0b0.bed -b /tmp/RtmpTQN7LL/b_32901d6b0695.bed -u
[1] 70
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290468a3d92.bed -b /tmp/RtmpTQN7LL/b_329057e0ce54.bed -u
[1] 57
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907b57a3bf.bed -b /tmp/RtmpTQN7LL/b_329023a53916.bed -u
[1] 64
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012335216.bed -b /tmp/RtmpTQN7LL/b_329053707c6a.bed -u
[1] 70
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901e7026a.bed -b /tmp/RtmpTQN7LL/b_329086fbfb4.bed -u
[1] 53
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290717200a3.bed -b /tmp/RtmpTQN7LL/b_32902748d5bd.bed -u
[1] 69
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907473a7a8.bed -b /tmp/RtmpTQN7LL/b_32902808dc22.bed -u
[1] 62
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059a5dcf0.bed -b /tmp/RtmpTQN7LL/b_3290375929a6.bed -u
[1] 62
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f9b2844.bed -b /tmp/RtmpTQN7LL/b_32905315ed80.bed -u
[1] 49
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290652839d.bed -b /tmp/RtmpTQN7LL/b_3290377173f2.bed -u
[1] 46
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902089a2f5.bed -b /tmp/RtmpTQN7LL/b_329051ce54ba.bed -u
[1] 43
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329074573c96.bed -b /tmp/RtmpTQN7LL/b_329010ebd197.bed -u
[1] 68
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290206583d3.bed -b /tmp/RtmpTQN7LL/b_32903b6bf0aa.bed -u
[1] 55
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905e0b2ed3.bed -b /tmp/RtmpTQN7LL/b_3290552155fc.bed -u
[1] 73
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906b3af88a.bed -b /tmp/RtmpTQN7LL/b_32902515f3b5.bed -u
[1] 68
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903590c91.bed -b /tmp/RtmpTQN7LL/b_3290629773dd.bed -u
[1] 71
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329055129c69.bed -b /tmp/RtmpTQN7LL/b_32906a9dc02f.bed -u
[1] 70
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903d797a5d.bed -b /tmp/RtmpTQN7LL/b_3290d055dcc.bed -u
[1] 56
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a806740.bed -b /tmp/RtmpTQN7LL/b_32904495cc59.bed -u
[1] 61
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d5a2be7.bed -b /tmp/RtmpTQN7LL/b_32907b783246.bed -u
[1] 50
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329060eaf760.bed -b /tmp/RtmpTQN7LL/b_32901355e540.bed -u
[1] 59
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290711104ac.bed -b /tmp/RtmpTQN7LL/b_3290212aaf0.bed -u
[1] 68
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907c578c04.bed -b /tmp/RtmpTQN7LL/b_329012807f09.bed -u
[1] 83
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329044198f11.bed -b /tmp/RtmpTQN7LL/b_329015344ca9.bed -u
[1] 48
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040448c94.bed -b /tmp/RtmpTQN7LL/b_329036039ced.bed -u
[1] 60
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901716bc28.bed -b /tmp/RtmpTQN7LL/b_329046bcc847.bed -u
[1] 62
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907488183b.bed -b /tmp/RtmpTQN7LL/b_32906e1352d1.bed -u
[1] 83
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329049c95899.bed -b /tmp/RtmpTQN7LL/b_32903f6fc18d.bed -u
[1] 46
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290323a6c60.bed -b /tmp/RtmpTQN7LL/b_329015adaf00.bed -u
[1] 50
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902cae089a.bed -b /tmp/RtmpTQN7LL/b_32901380e574.bed -u
[1] 79
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903bf1ea72.bed -b /tmp/RtmpTQN7LL/b_3290d501393.bed -u
[1] 54
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329054999aef.bed -b /tmp/RtmpTQN7LL/b_32907849423e.bed -u
[1] 55
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902d26403e.bed -b /tmp/RtmpTQN7LL/b_32903ac1ef3b.bed -u
[1] 76
[1] "101 ctrl number"
$disease
[1] "T1D"

$fg.val
[1] 103

$bg.stdev
[1] 1.141561

$bg.mean
[1] 65.13

$z.score
[1] 33.17386

$p.val
[1] 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656

$significant
[1] "yes"

$cell.type
[1] "Beta"

  disease fg.val bg.stdev bg.mean   z.score
1     T1D    112 2.271714  157.82 -20.16980
2     T1D     84 1.203619   68.83  12.60366
3     T1D    103 1.141561   65.13  33.17386
                                                                                                                                                                                                                                                      p.val
1 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2 0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
  significant      cell.type
1          no RightVentricle
2        <NA>           <NA>
3        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329026647658.bed -b /tmp/RtmpTQN7LL/b_32903c139ada.bed -u
[1] 107
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c99b201.bed -b /tmp/RtmpTQN7LL/b_32902a9d4ec2.bed -u
[1] 47
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329060b3974a.bed -b /tmp/RtmpTQN7LL/b_32901435136e.bed -u
[1] 80
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b2e4a45.bed -b /tmp/RtmpTQN7LL/b_3290149789aa.bed -u
[1] 78
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905924eb74.bed -b /tmp/RtmpTQN7LL/b_32905ae856.bed -u
[1] 55
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290424e713a.bed -b /tmp/RtmpTQN7LL/b_32903e27213e.bed -u
[1] 77
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907d2bac5.bed -b /tmp/RtmpTQN7LL/b_32904eb78e91.bed -u
[1] 66
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904b6ecb60.bed -b /tmp/RtmpTQN7LL/b_32902664eca8.bed -u
[1] 54
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b09a16f.bed -b /tmp/RtmpTQN7LL/b_32907f941c53.bed -u
[1] 86
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329010ce718c.bed -b /tmp/RtmpTQN7LL/b_3290780902c9.bed -u
[1] 74
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904f4ab8e6.bed -b /tmp/RtmpTQN7LL/b_32904b98b59f.bed -u
[1] 52
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329025821672.bed -b /tmp/RtmpTQN7LL/b_3290255319f9.bed -u
[1] 70
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329070ef9242.bed -b /tmp/RtmpTQN7LL/b_329059d65318.bed -u
[1] 76
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903dbb3b71.bed -b /tmp/RtmpTQN7LL/b_32905860c012.bed -u
[1] 76
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329079568e2d.bed -b /tmp/RtmpTQN7LL/b_32906b852d5b.bed -u
[1] 74
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290737ed064.bed -b /tmp/RtmpTQN7LL/b_3290696a3ffe.bed -u
[1] 70
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040b357a8.bed -b /tmp/RtmpTQN7LL/b_32905520deea.bed -u
[1] 72
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329057200d99.bed -b /tmp/RtmpTQN7LL/b_32903d7da592.bed -u
[1] 58
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901927bd61.bed -b /tmp/RtmpTQN7LL/b_32903922fb62.bed -u
[1] 81
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329010013cc8.bed -b /tmp/RtmpTQN7LL/b_329028e80765.bed -u
[1] 90
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907aeddfdc.bed -b /tmp/RtmpTQN7LL/b_32901717d4d2.bed -u
[1] 81
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a5d1741.bed -b /tmp/RtmpTQN7LL/b_32906f3b1179.bed -u
[1] 76
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907b4defee.bed -b /tmp/RtmpTQN7LL/b_3290540aeffd.bed -u
[1] 83
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290abdac81.bed -b /tmp/RtmpTQN7LL/b_32905d47e226.bed -u
[1] 90
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c1859f6.bed -b /tmp/RtmpTQN7LL/b_32903b3ba354.bed -u
[1] 66
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c37e1fa.bed -b /tmp/RtmpTQN7LL/b_32903c99c7a0.bed -u
[1] 77
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039d031d1.bed -b /tmp/RtmpTQN7LL/b_329073d5cf18.bed -u
[1] 51
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329071b35b11.bed -b /tmp/RtmpTQN7LL/b_329037a58d6e.bed -u
[1] 52
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b8bd115.bed -b /tmp/RtmpTQN7LL/b_3290572af0b0.bed -u
[1] 67
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048bbec0.bed -b /tmp/RtmpTQN7LL/b_329030b2a891.bed -u
[1] 87
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903137904b.bed -b /tmp/RtmpTQN7LL/b_32901b54879b.bed -u
[1] 96
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290515386c0.bed -b /tmp/RtmpTQN7LL/b_329027cc5715.bed -u
[1] 51
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061c9e512.bed -b /tmp/RtmpTQN7LL/b_32907b3c5809.bed -u
[1] 98
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329057360004.bed -b /tmp/RtmpTQN7LL/b_3290c3b5219.bed -u
[1] 69
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048834c9b.bed -b /tmp/RtmpTQN7LL/b_329037f122d6.bed -u
[1] 69
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a9f457f.bed -b /tmp/RtmpTQN7LL/b_3290f98ec4f.bed -u
[1] 58
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039ebd356.bed -b /tmp/RtmpTQN7LL/b_32902161ea42.bed -u
[1] 85
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290643d24e1.bed -b /tmp/RtmpTQN7LL/b_3290fcf75a6.bed -u
[1] 84
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048e4ae07.bed -b /tmp/RtmpTQN7LL/b_32904728d327.bed -u
[1] 42
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a54152e.bed -b /tmp/RtmpTQN7LL/b_32902d79866c.bed -u
[1] 80
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901f2ab64c.bed -b /tmp/RtmpTQN7LL/b_32902bd1133b.bed -u
[1] 80
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329052afc208.bed -b /tmp/RtmpTQN7LL/b_329071a400c4.bed -u
[1] 84
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905904970e.bed -b /tmp/RtmpTQN7LL/b_32904609ea8b.bed -u
[1] 88
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901fe0267a.bed -b /tmp/RtmpTQN7LL/b_32905fc62cce.bed -u
[1] 94
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290dca4009.bed -b /tmp/RtmpTQN7LL/b_329021712676.bed -u
[1] 75
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329016b64b44.bed -b /tmp/RtmpTQN7LL/b_32901a3ef8b.bed -u
[1] 68
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903356d770.bed -b /tmp/RtmpTQN7LL/b_329064561409.bed -u
[1] 75
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329056fe9855.bed -b /tmp/RtmpTQN7LL/b_329013468aa7.bed -u
[1] 82
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329010372fef.bed -b /tmp/RtmpTQN7LL/b_32902d9a7e2f.bed -u
[1] 67
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904d453df0.bed -b /tmp/RtmpTQN7LL/b_3290629ac854.bed -u
[1] 89
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290b2fff1e.bed -b /tmp/RtmpTQN7LL/b_32904d5d0ae9.bed -u
[1] 83
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a03cbf8.bed -b /tmp/RtmpTQN7LL/b_32907dafbeed.bed -u
[1] 79
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902666caab.bed -b /tmp/RtmpTQN7LL/b_32903354e5d4.bed -u
[1] 78
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290678cdde7.bed -b /tmp/RtmpTQN7LL/b_329021c41a93.bed -u
[1] 86
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903477bc64.bed -b /tmp/RtmpTQN7LL/b_3290be341ac.bed -u
[1] 75
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050351d81.bed -b /tmp/RtmpTQN7LL/b_32905cde1f4d.bed -u
[1] 56
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903baaacf7.bed -b /tmp/RtmpTQN7LL/b_329069f4838d.bed -u
[1] 57
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290595e8214.bed -b /tmp/RtmpTQN7LL/b_3290305ebc1f.bed -u
[1] 80
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290263abd56.bed -b /tmp/RtmpTQN7LL/b_329058fea21f.bed -u
[1] 59
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906972a074.bed -b /tmp/RtmpTQN7LL/b_329015da838d.bed -u
[1] 79
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c1e4967.bed -b /tmp/RtmpTQN7LL/b_3290387f88be.bed -u
[1] 72
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329078ab61ad.bed -b /tmp/RtmpTQN7LL/b_32906b779d39.bed -u
[1] 73
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a52119b.bed -b /tmp/RtmpTQN7LL/b_32904b65cc36.bed -u
[1] 70
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905c61b938.bed -b /tmp/RtmpTQN7LL/b_329063cdd62.bed -u
[1] 82
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290a1a81e8.bed -b /tmp/RtmpTQN7LL/b_3290560426ad.bed -u
[1] 79
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329065e63a23.bed -b /tmp/RtmpTQN7LL/b_32902d0a7e74.bed -u
[1] 76
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902cfc52c7.bed -b /tmp/RtmpTQN7LL/b_32906053ba71.bed -u
[1] 68
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290766526a0.bed -b /tmp/RtmpTQN7LL/b_329049200ad1.bed -u
[1] 83
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290568962d7.bed -b /tmp/RtmpTQN7LL/b_329046c452ca.bed -u
[1] 75
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290776e31d2.bed -b /tmp/RtmpTQN7LL/b_329030973a8f.bed -u
[1] 63
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903139a7a9.bed -b /tmp/RtmpTQN7LL/b_32907e24c231.bed -u
[1] 68
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902552354a.bed -b /tmp/RtmpTQN7LL/b_329070624084.bed -u
[1] 83
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329055531ef5.bed -b /tmp/RtmpTQN7LL/b_3290786b6a0c.bed -u
[1] 63
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329043489408.bed -b /tmp/RtmpTQN7LL/b_32902e6aab4e.bed -u
[1] 77
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329016417f88.bed -b /tmp/RtmpTQN7LL/b_329044c445e0.bed -u
[1] 77
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329035b0bd9a.bed -b /tmp/RtmpTQN7LL/b_329027f86453.bed -u
[1] 74
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329087e5d1.bed -b /tmp/RtmpTQN7LL/b_329017be689c.bed -u
[1] 54
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907450c60f.bed -b /tmp/RtmpTQN7LL/b_32907c363ccc.bed -u
[1] 56
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329036d6598c.bed -b /tmp/RtmpTQN7LL/b_32906b617a72.bed -u
[1] 46
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329055537358.bed -b /tmp/RtmpTQN7LL/b_32904308ce2c.bed -u
[1] 75
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a200c5d.bed -b /tmp/RtmpTQN7LL/b_329059bed760.bed -u
[1] 57
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290439343bd.bed -b /tmp/RtmpTQN7LL/b_32907c809435.bed -u
[1] 84
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329010d898bc.bed -b /tmp/RtmpTQN7LL/b_32905c274b0b.bed -u
[1] 75
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907cc86c70.bed -b /tmp/RtmpTQN7LL/b_32901c133823.bed -u
[1] 76
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903d347815.bed -b /tmp/RtmpTQN7LL/b_32903b9776fc.bed -u
[1] 78
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907e5d2c3f.bed -b /tmp/RtmpTQN7LL/b_32904308cb6.bed -u
[1] 58
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903cd0f15e.bed -b /tmp/RtmpTQN7LL/b_32901a12b42c.bed -u
[1] 71
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329011b9c898.bed -b /tmp/RtmpTQN7LL/b_3290319999eb.bed -u
[1] 60
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901e681249.bed -b /tmp/RtmpTQN7LL/b_32906fd34d67.bed -u
[1] 66
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290241a3a9.bed -b /tmp/RtmpTQN7LL/b_329043b63e52.bed -u
[1] 77
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c0a9305.bed -b /tmp/RtmpTQN7LL/b_3290723a134e.bed -u
[1] 88
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905950d521.bed -b /tmp/RtmpTQN7LL/b_329017461012.bed -u
[1] 51
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907e583057.bed -b /tmp/RtmpTQN7LL/b_32906e15487d.bed -u
[1] 61
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329088c3eb0.bed -b /tmp/RtmpTQN7LL/b_32907c0b954d.bed -u
[1] 71
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904eb096e6.bed -b /tmp/RtmpTQN7LL/b_32901ec3c074.bed -u
[1] 92
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32909534113.bed -b /tmp/RtmpTQN7LL/b_32906881747b.bed -u
[1] 49
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905a01554d.bed -b /tmp/RtmpTQN7LL/b_329083ea85a.bed -u
[1] 56
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a0ea60a.bed -b /tmp/RtmpTQN7LL/b_32902bae1bdd.bed -u
[1] 84
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906d6f3752.bed -b /tmp/RtmpTQN7LL/b_32907b38f73b.bed -u
[1] 54
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903927c376.bed -b /tmp/RtmpTQN7LL/b_32904c1f05cd.bed -u
[1] 59
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059c01a09.bed -b /tmp/RtmpTQN7LL/b_32901f7cc6a8.bed -u
[1] 85
[1] "101 ctrl number"
$disease
[1] "T1D"

$fg.val
[1] 107

$bg.stdev
[1] 1.258023

$bg.mean
[1] 71.98

$z.score
[1] 27.83733

$p.val
[1] 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007668301

$significant
[1] "yes"

$cell.type
[1] "Delta"

  disease fg.val bg.stdev bg.mean   z.score
1     T1D    112 2.271714  157.82 -20.16980
2     T1D     84 1.203619   68.83  12.60366
3     T1D    103 1.141561   65.13  33.17386
4     T1D    107 1.258023   71.98  27.83733
                                                                                                                                                                                                                                                      p.val
1 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2 0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
  significant      cell.type
1          no RightVentricle
2        <NA>           <NA>
3        <NA>           <NA>
4        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039750a65.bed -b /tmp/RtmpTQN7LL/b_329070a0853c.bed -u
[1] 76
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329030b8a32e.bed -b /tmp/RtmpTQN7LL/b_32905f0b003a.bed -u
[1] 39
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905a7a7caf.bed -b /tmp/RtmpTQN7LL/b_32904bff1645.bed -u
[1] 65
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907fd5635d.bed -b /tmp/RtmpTQN7LL/b_3290383cdf10.bed -u
[1] 57
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905c3342f9.bed -b /tmp/RtmpTQN7LL/b_3290afdd371.bed -u
[1] 45
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290337a627b.bed -b /tmp/RtmpTQN7LL/b_329073c75072.bed -u
[1] 68
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d9f9373.bed -b /tmp/RtmpTQN7LL/b_32901ab6112d.bed -u
[1] 41
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061b8da13.bed -b /tmp/RtmpTQN7LL/b_32905984acc7.bed -u
[1] 48
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290516e6a77.bed -b /tmp/RtmpTQN7LL/b_329051c20b33.bed -u
[1] 66
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290590c23ac.bed -b /tmp/RtmpTQN7LL/b_3290117cc93c.bed -u
[1] 54
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c525370.bed -b /tmp/RtmpTQN7LL/b_329062243c41.bed -u
[1] 47
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904b6fcab0.bed -b /tmp/RtmpTQN7LL/b_32905768e272.bed -u
[1] 51
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c6b5e9e.bed -b /tmp/RtmpTQN7LL/b_329031704425.bed -u
[1] 55
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290272b37c5.bed -b /tmp/RtmpTQN7LL/b_329060d8ad85.bed -u
[1] 61
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905f643126.bed -b /tmp/RtmpTQN7LL/b_3290592592d1.bed -u
[1] 61
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905baa8ac2.bed -b /tmp/RtmpTQN7LL/b_329049f16a7f.bed -u
[1] 65
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022e5ea16.bed -b /tmp/RtmpTQN7LL/b_329070071edb.bed -u
[1] 61
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907647d07.bed -b /tmp/RtmpTQN7LL/b_3290771d3bf9.bed -u
[1] 48
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059b61bba.bed -b /tmp/RtmpTQN7LL/b_3290676eb025.bed -u
[1] 61
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290b8efbf.bed -b /tmp/RtmpTQN7LL/b_32902a1c193e.bed -u
[1] 73
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031b32821.bed -b /tmp/RtmpTQN7LL/b_32906116d6bf.bed -u
[1] 65
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290584ee8c0.bed -b /tmp/RtmpTQN7LL/b_329023f8ee0.bed -u
[1] 70
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903b596a63.bed -b /tmp/RtmpTQN7LL/b_329022abde76.bed -u
[1] 69
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290117ec79b.bed -b /tmp/RtmpTQN7LL/b_329072cd9725.bed -u
[1] 77
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290771220dd.bed -b /tmp/RtmpTQN7LL/b_32906f69e6e5.bed -u
[1] 53
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329042a971b4.bed -b /tmp/RtmpTQN7LL/b_329061440d61.bed -u
[1] 58
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329049e0270d.bed -b /tmp/RtmpTQN7LL/b_32904f092ff5.bed -u
[1] 39
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290646e326.bed -b /tmp/RtmpTQN7LL/b_3290f7347cc.bed -u
[1] 41
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040377be8.bed -b /tmp/RtmpTQN7LL/b_329035e5f4ef.bed -u
[1] 47
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903073c877.bed -b /tmp/RtmpTQN7LL/b_3290753ed9.bed -u
[1] 65
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329070bbc8f4.bed -b /tmp/RtmpTQN7LL/b_32904a666c17.bed -u
[1] 79
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022af584c.bed -b /tmp/RtmpTQN7LL/b_32901781460d.bed -u
[1] 40
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013dcb300.bed -b /tmp/RtmpTQN7LL/b_32904dc20bc2.bed -u
[1] 83
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329036a13a4e.bed -b /tmp/RtmpTQN7LL/b_32906692d87b.bed -u
[1] 51
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901fb76f74.bed -b /tmp/RtmpTQN7LL/b_32906d3dead6.bed -u
[1] 50
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329063c42f48.bed -b /tmp/RtmpTQN7LL/b_32904c445aaa.bed -u
[1] 50
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290634eede3.bed -b /tmp/RtmpTQN7LL/b_3290c76578b.bed -u
[1] 73
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329025f2ada3.bed -b /tmp/RtmpTQN7LL/b_329057df850.bed -u
[1] 63
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905cf2d482.bed -b /tmp/RtmpTQN7LL/b_329023f88531.bed -u
[1] 35
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290184f1e99.bed -b /tmp/RtmpTQN7LL/b_32906a2e8934.bed -u
[1] 62
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290394e0c50.bed -b /tmp/RtmpTQN7LL/b_32906f689d70.bed -u
[1] 56
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329029784aa5.bed -b /tmp/RtmpTQN7LL/b_32904f7ad5e1.bed -u
[1] 80
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072e00d51.bed -b /tmp/RtmpTQN7LL/b_3290338fef8b.bed -u
[1] 62
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290a31378.bed -b /tmp/RtmpTQN7LL/b_32901422945f.bed -u
[1] 82
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290120103ca.bed -b /tmp/RtmpTQN7LL/b_32901338d38d.bed -u
[1] 63
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329062befac0.bed -b /tmp/RtmpTQN7LL/b_329045e54925.bed -u
[1] 51
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904de0c0b2.bed -b /tmp/RtmpTQN7LL/b_3290a10a5b1.bed -u
[1] 57
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329030a9b372.bed -b /tmp/RtmpTQN7LL/b_32905f1a8ecd.bed -u
[1] 62
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32909bbbeea.bed -b /tmp/RtmpTQN7LL/b_3290147d86b.bed -u
[1] 48
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290727e58a6.bed -b /tmp/RtmpTQN7LL/b_32905bf7a0f5.bed -u
[1] 67
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069ffada4.bed -b /tmp/RtmpTQN7LL/b_329045cef80d.bed -u
[1] 61
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c3dc6f7.bed -b /tmp/RtmpTQN7LL/b_3290181330ab.bed -u
[1] 66
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329024c63645.bed -b /tmp/RtmpTQN7LL/b_329076131fd2.bed -u
[1] 68
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904e778816.bed -b /tmp/RtmpTQN7LL/b_329066f70948.bed -u
[1] 73
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329016c9d24.bed -b /tmp/RtmpTQN7LL/b_329031941f1e.bed -u
[1] 53
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32908e60ee0.bed -b /tmp/RtmpTQN7LL/b_329017424c78.bed -u
[1] 50
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290dfc38a3.bed -b /tmp/RtmpTQN7LL/b_32904067a9d6.bed -u
[1] 47
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290421edf3f.bed -b /tmp/RtmpTQN7LL/b_3290661eaa53.bed -u
[1] 69
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329044f43eb0.bed -b /tmp/RtmpTQN7LL/b_329051bd0253.bed -u
[1] 47
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290371c696e.bed -b /tmp/RtmpTQN7LL/b_32901032bce1.bed -u
[1] 69
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329056391cbc.bed -b /tmp/RtmpTQN7LL/b_32905a9f4c1f.bed -u
[1] 56
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905cc8d644.bed -b /tmp/RtmpTQN7LL/b_32907c2e1624.bed -u
[1] 55
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290455de3d.bed -b /tmp/RtmpTQN7LL/b_3290425238c1.bed -u
[1] 51
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902bcfe669.bed -b /tmp/RtmpTQN7LL/b_32906eb08808.bed -u
[1] 56
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b8e9d06.bed -b /tmp/RtmpTQN7LL/b_32904b9c3ad5.bed -u
[1] 64
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903a7f87a7.bed -b /tmp/RtmpTQN7LL/b_329028fd57f0.bed -u
[1] 59
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902cc4ad08.bed -b /tmp/RtmpTQN7LL/b_3290f5ed01.bed -u
[1] 54
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069b33ad8.bed -b /tmp/RtmpTQN7LL/b_32905e8b91b1.bed -u
[1] 60
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905c70cd8c.bed -b /tmp/RtmpTQN7LL/b_329023d8abb6.bed -u
[1] 62
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c5b1898.bed -b /tmp/RtmpTQN7LL/b_32901ed84249.bed -u
[1] 43
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290440646fc.bed -b /tmp/RtmpTQN7LL/b_329075975d69.bed -u
[1] 58
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907891594.bed -b /tmp/RtmpTQN7LL/b_329058dcbf28.bed -u
[1] 60
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012540486.bed -b /tmp/RtmpTQN7LL/b_329034cf8ccc.bed -u
[1] 47
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b63ca65.bed -b /tmp/RtmpTQN7LL/b_329012ab2d6.bed -u
[1] 60
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904433f086.bed -b /tmp/RtmpTQN7LL/b_3290155e5e43.bed -u
[1] 54
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329025cab125.bed -b /tmp/RtmpTQN7LL/b_32905073776f.bed -u
[1] 58
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b5f455d.bed -b /tmp/RtmpTQN7LL/b_32906fe405e3.bed -u
[1] 47
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d5cb352.bed -b /tmp/RtmpTQN7LL/b_3290178786b2.bed -u
[1] 42
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904cf77ad7.bed -b /tmp/RtmpTQN7LL/b_329053f45e83.bed -u
[1] 35
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901952f6ca.bed -b /tmp/RtmpTQN7LL/b_329045fe7777.bed -u
[1] 62
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290608c6985.bed -b /tmp/RtmpTQN7LL/b_329056075408.bed -u
[1] 49
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905381f2ff.bed -b /tmp/RtmpTQN7LL/b_329059615305.bed -u
[1] 65
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901284b148.bed -b /tmp/RtmpTQN7LL/b_329022c69c20.bed -u
[1] 65
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906bf26206.bed -b /tmp/RtmpTQN7LL/b_329072f1305c.bed -u
[1] 56
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290fb081a0.bed -b /tmp/RtmpTQN7LL/b_3290e173f03.bed -u
[1] 57
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013c9a169.bed -b /tmp/RtmpTQN7LL/b_32903278c226.bed -u
[1] 47
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903dd59235.bed -b /tmp/RtmpTQN7LL/b_329070699a40.bed -u
[1] 54
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290539b10a7.bed -b /tmp/RtmpTQN7LL/b_329010fb7ae4.bed -u
[1] 44
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b93ddc4.bed -b /tmp/RtmpTQN7LL/b_3290462b3401.bed -u
[1] 51
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32909e199d7.bed -b /tmp/RtmpTQN7LL/b_3290700ad96e.bed -u
[1] 65
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907fd2c048.bed -b /tmp/RtmpTQN7LL/b_32907fa269f5.bed -u
[1] 72
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f742e3e.bed -b /tmp/RtmpTQN7LL/b_3290748db097.bed -u
[1] 45
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902ed06d0e.bed -b /tmp/RtmpTQN7LL/b_32906c87143c.bed -u
[1] 42
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903fdcda56.bed -b /tmp/RtmpTQN7LL/b_3290168b33a6.bed -u
[1] 58
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907fc77f23.bed -b /tmp/RtmpTQN7LL/b_3290783c9b8c.bed -u
[1] 68
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290190a21a4.bed -b /tmp/RtmpTQN7LL/b_32901724537a.bed -u
[1] 42
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904acd4ec1.bed -b /tmp/RtmpTQN7LL/b_329063c23904.bed -u
[1] 43
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048abacda.bed -b /tmp/RtmpTQN7LL/b_32902cc47ce1.bed -u
[1] 59
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290663d39a4.bed -b /tmp/RtmpTQN7LL/b_32905777fd72.bed -u
[1] 41
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072bd965a.bed -b /tmp/RtmpTQN7LL/b_32902009fd86.bed -u
[1] 46
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329074dcf647.bed -b /tmp/RtmpTQN7LL/b_329029a65dd1.bed -u
[1] 71
[1] "101 ctrl number"
$disease
[1] "T1D"

$fg.val
[1] 76

$bg.stdev
[1] 1.08586

$bg.mean
[1] 56.9

$z.score
[1] 17.58975

$p.val
[1] 0.000000000000000000000000000000000000000000000000000000000000000000001475827

$significant
[1] "yes"

$cell.type
[1] "Endocrine_Progenitor"

  disease fg.val bg.stdev bg.mean   z.score
1     T1D    112 2.271714  157.82 -20.16980
2     T1D     84 1.203619   68.83  12.60366
3     T1D    103 1.141561   65.13  33.17386
4     T1D    107 1.258023   71.98  27.83733
5     T1D     76 1.085860   56.90  17.58975
                                                                                                                                                                                                                                                      p.val
1 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2 0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5 0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
  significant      cell.type
1          no RightVentricle
2        <NA>           <NA>
3        <NA>           <NA>
4        <NA>           <NA>
5        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a9a48e4.bed -b /tmp/RtmpTQN7LL/b_3290fae8b63.bed -u
[1] 63
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329045d43de3.bed -b /tmp/RtmpTQN7LL/b_3290904b544.bed -u
[1] 33
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329042fe62a3.bed -b /tmp/RtmpTQN7LL/b_32906ef64bfa.bed -u
[1] 60
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329056c0efd6.bed -b /tmp/RtmpTQN7LL/b_32902236ef58.bed -u
[1] 49
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290231d9360.bed -b /tmp/RtmpTQN7LL/b_32902dc3d4a.bed -u
[1] 42
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d8eeeb.bed -b /tmp/RtmpTQN7LL/b_32904e0bee7.bed -u
[1] 51
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290558b779c.bed -b /tmp/RtmpTQN7LL/b_3290125b01fb.bed -u
[1] 35
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329033d9fa3b.bed -b /tmp/RtmpTQN7LL/b_3290553d1da9.bed -u
[1] 33
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048fafe8c.bed -b /tmp/RtmpTQN7LL/b_329011cff9ec.bed -u
[1] 54
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906e17d29e.bed -b /tmp/RtmpTQN7LL/b_329049fea4f7.bed -u
[1] 47
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907ef22291.bed -b /tmp/RtmpTQN7LL/b_3290215de147.bed -u
[1] 41
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905cbbdd.bed -b /tmp/RtmpTQN7LL/b_329019569b1f.bed -u
[1] 50
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329018e8385.bed -b /tmp/RtmpTQN7LL/b_32906eab49ee.bed -u
[1] 45
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903b15b4b1.bed -b /tmp/RtmpTQN7LL/b_3290702a133b.bed -u
[1] 44
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329033e73ae6.bed -b /tmp/RtmpTQN7LL/b_32901e3d9adb.bed -u
[1] 48
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329030bcce5a.bed -b /tmp/RtmpTQN7LL/b_3290386735ab.bed -u
[1] 53
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907c4a3eb0.bed -b /tmp/RtmpTQN7LL/b_32901877cd22.bed -u
[1] 48
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329033d5aef2.bed -b /tmp/RtmpTQN7LL/b_329073c9bbea.bed -u
[1] 39
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c3f011d.bed -b /tmp/RtmpTQN7LL/b_329025061d63.bed -u
[1] 47
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072974be8.bed -b /tmp/RtmpTQN7LL/b_329071abaa3.bed -u
[1] 63
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906b7537c6.bed -b /tmp/RtmpTQN7LL/b_329059e5c612.bed -u
[1] 53
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290470d5809.bed -b /tmp/RtmpTQN7LL/b_32907b366c3d.bed -u
[1] 56
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290718b7717.bed -b /tmp/RtmpTQN7LL/b_32907f4e13fd.bed -u
[1] 59
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329051aa1bb2.bed -b /tmp/RtmpTQN7LL/b_32906a37057f.bed -u
[1] 67
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290651920cf.bed -b /tmp/RtmpTQN7LL/b_329069614555.bed -u
[1] 45
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a8ac2cd.bed -b /tmp/RtmpTQN7LL/b_32904c2161af.bed -u
[1] 45
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290b886c56.bed -b /tmp/RtmpTQN7LL/b_329037d8f0a3.bed -u
[1] 31
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f594d7f.bed -b /tmp/RtmpTQN7LL/b_32904400aa1e.bed -u
[1] 29
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903524e4c4.bed -b /tmp/RtmpTQN7LL/b_3290318e2c31.bed -u
[1] 38
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907d52aa8c.bed -b /tmp/RtmpTQN7LL/b_32902950cd8e.bed -u
[1] 56
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901903e1b9.bed -b /tmp/RtmpTQN7LL/b_329066dc53b2.bed -u
[1] 66
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c8b07e8.bed -b /tmp/RtmpTQN7LL/b_32902c7d8b55.bed -u
[1] 28
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053ee1230.bed -b /tmp/RtmpTQN7LL/b_32902f7c0eb0.bed -u
[1] 71
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902849e9a9.bed -b /tmp/RtmpTQN7LL/b_32907def8810.bed -u
[1] 36
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061121104.bed -b /tmp/RtmpTQN7LL/b_32901f69541a.bed -u
[1] 39
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a579cf4.bed -b /tmp/RtmpTQN7LL/b_3290337d2a3.bed -u
[1] 42
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329032742659.bed -b /tmp/RtmpTQN7LL/b_3290425641da.bed -u
[1] 68
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290567766f.bed -b /tmp/RtmpTQN7LL/b_329059678813.bed -u
[1] 54
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329042e3d8bc.bed -b /tmp/RtmpTQN7LL/b_32902ad02322.bed -u
[1] 30
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906fd0fff8.bed -b /tmp/RtmpTQN7LL/b_3290646a9890.bed -u
[1] 46
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904277b54.bed -b /tmp/RtmpTQN7LL/b_3290498fc15c.bed -u
[1] 47
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d206be8.bed -b /tmp/RtmpTQN7LL/b_3290209102b1.bed -u
[1] 61
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290214c0ba.bed -b /tmp/RtmpTQN7LL/b_3290769faba7.bed -u
[1] 50
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905adab7bf.bed -b /tmp/RtmpTQN7LL/b_32902d951808.bed -u
[1] 65
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329020295fab.bed -b /tmp/RtmpTQN7LL/b_329062b7e3f0.bed -u
[1] 54
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012d0ac32.bed -b /tmp/RtmpTQN7LL/b_3290739f8f.bed -u
[1] 49
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d1cf708.bed -b /tmp/RtmpTQN7LL/b_329057227e03.bed -u
[1] 46
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039a78d9c.bed -b /tmp/RtmpTQN7LL/b_3290249b6342.bed -u
[1] 44
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c6b952b.bed -b /tmp/RtmpTQN7LL/b_32902dc3ccb6.bed -u
[1] 33
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904080b03.bed -b /tmp/RtmpTQN7LL/b_329037dc6aaa.bed -u
[1] 48
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290cdedc47.bed -b /tmp/RtmpTQN7LL/b_329073ce9bd9.bed -u
[1] 47
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903d6056c.bed -b /tmp/RtmpTQN7LL/b_3290e438cc0.bed -u
[1] 56
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905ab4c254.bed -b /tmp/RtmpTQN7LL/b_329017038c4b.bed -u
[1] 58
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329018cdb8e3.bed -b /tmp/RtmpTQN7LL/b_329018311fd5.bed -u
[1] 56
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290421e4012.bed -b /tmp/RtmpTQN7LL/b_32905e7796b7.bed -u
[1] 37
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901182c75d.bed -b /tmp/RtmpTQN7LL/b_3290589e97e4.bed -u
[1] 39
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902e0d7f5c.bed -b /tmp/RtmpTQN7LL/b_32902c3367a0.bed -u
[1] 38
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904af9277f.bed -b /tmp/RtmpTQN7LL/b_329013cc10e.bed -u
[1] 63
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32908fd82e9.bed -b /tmp/RtmpTQN7LL/b_329025edbdaa.bed -u
[1] 42
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290145eb614.bed -b /tmp/RtmpTQN7LL/b_329051c67452.bed -u
[1] 58
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b92fa46.bed -b /tmp/RtmpTQN7LL/b_3290168bccd9.bed -u
[1] 43
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904eb00631.bed -b /tmp/RtmpTQN7LL/b_32905eeba807.bed -u
[1] 44
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903a2b7919.bed -b /tmp/RtmpTQN7LL/b_32902205e686.bed -u
[1] 45
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290225035ea.bed -b /tmp/RtmpTQN7LL/b_32907ff2415d.bed -u
[1] 41
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290306c1733.bed -b /tmp/RtmpTQN7LL/b_32905eb22847.bed -u
[1] 58
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902e3bd551.bed -b /tmp/RtmpTQN7LL/b_3290652f0209.bed -u
[1] 48
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ac146ae.bed -b /tmp/RtmpTQN7LL/b_329032223cd5.bed -u
[1] 42
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290763bedef.bed -b /tmp/RtmpTQN7LL/b_329071bca035.bed -u
[1] 51
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329028f98c2e.bed -b /tmp/RtmpTQN7LL/b_329052c29824.bed -u
[1] 54
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c4e19df.bed -b /tmp/RtmpTQN7LL/b_32901d96a4de.bed -u
[1] 34
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329051ea3fd9.bed -b /tmp/RtmpTQN7LL/b_329097ac9f4.bed -u
[1] 53
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329011781ecc.bed -b /tmp/RtmpTQN7LL/b_329064493dde.bed -u
[1] 49
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290469a3a92.bed -b /tmp/RtmpTQN7LL/b_329054fbd26e.bed -u
[1] 42
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c3b8c02.bed -b /tmp/RtmpTQN7LL/b_32903786349a.bed -u
[1] 46
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906cca8d5e.bed -b /tmp/RtmpTQN7LL/b_32904c2c26e2.bed -u
[1] 39
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907640eeda.bed -b /tmp/RtmpTQN7LL/b_329018e447c6.bed -u
[1] 44
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290128e08a5.bed -b /tmp/RtmpTQN7LL/b_329015e49aba.bed -u
[1] 41
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059e345dc.bed -b /tmp/RtmpTQN7LL/b_329054351592.bed -u
[1] 37
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013900620.bed -b /tmp/RtmpTQN7LL/b_32907f606b49.bed -u
[1] 29
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902ceec9e0.bed -b /tmp/RtmpTQN7LL/b_3290263d144b.bed -u
[1] 44
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329025c16fc3.bed -b /tmp/RtmpTQN7LL/b_3290123d416a.bed -u
[1] 37
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048136897.bed -b /tmp/RtmpTQN7LL/b_3290311df9e0.bed -u
[1] 51
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290663906f4.bed -b /tmp/RtmpTQN7LL/b_329015736919.bed -u
[1] 58
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329026d5f937.bed -b /tmp/RtmpTQN7LL/b_32904e28e040.bed -u
[1] 46
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290211aba1b.bed -b /tmp/RtmpTQN7LL/b_329042a241d7.bed -u
[1] 53
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a549a1a.bed -b /tmp/RtmpTQN7LL/b_329053568196.bed -u
[1] 32
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907637047f.bed -b /tmp/RtmpTQN7LL/b_329062f65672.bed -u
[1] 49
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902da777e8.bed -b /tmp/RtmpTQN7LL/b_329049d6906a.bed -u
[1] 41
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329094e13fc.bed -b /tmp/RtmpTQN7LL/b_3290566c3f6a.bed -u
[1] 40
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290121769c5.bed -b /tmp/RtmpTQN7LL/b_3290fd564ab.bed -u
[1] 54
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329038859e1c.bed -b /tmp/RtmpTQN7LL/b_32906cfbae59.bed -u
[1] 59
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901191775c.bed -b /tmp/RtmpTQN7LL/b_32907431e326.bed -u
[1] 40
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c9f9e6.bed -b /tmp/RtmpTQN7LL/b_329043e14507.bed -u
[1] 37
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902080e352.bed -b /tmp/RtmpTQN7LL/b_32901fb0eb14.bed -u
[1] 42
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329045a4ee64.bed -b /tmp/RtmpTQN7LL/b_32906734e4e9.bed -u
[1] 53
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329076400cde.bed -b /tmp/RtmpTQN7LL/b_3290197b6807.bed -u
[1] 36
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907e720358.bed -b /tmp/RtmpTQN7LL/b_32904126eb4c.bed -u
[1] 36
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290245763f8.bed -b /tmp/RtmpTQN7LL/b_32903b11cb0e.bed -u
[1] 49
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a4d277c.bed -b /tmp/RtmpTQN7LL/b_32903cc4567d.bed -u
[1] 32
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905c38926.bed -b /tmp/RtmpTQN7LL/b_32907a12f2dc.bed -u
[1] 38
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069cbc0f2.bed -b /tmp/RtmpTQN7LL/b_32902159c8aa.bed -u
[1] 55
[1] "101 ctrl number"
$disease
[1] "T1D"

$fg.val
[1] 63

$bg.stdev
[1] 0.9678071

$bg.mean
[1] 46.54

$z.score
[1] 17.00752

$p.val
[1] 0.00000000000000000000000000000000000000000000000000000000000000003611432

$significant
[1] "yes"

$cell.type
[1] "Epsilon"

  disease fg.val  bg.stdev bg.mean   z.score
1     T1D    112 2.2717136  157.82 -20.16980
2     T1D     84 1.2036187   68.83  12.60366
3     T1D    103 1.1415615   65.13  33.17386
4     T1D    107 1.2580231   71.98  27.83733
5     T1D     76 1.0858595   56.90  17.58975
6     T1D     63 0.9678071   46.54  17.00752
                                                                                                                                                                                                                                                      p.val
1 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2 0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5 0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
6 0.0000000000000000000000000000000000000000000000000000000000000000361143175379509856604364131827627416166015383339051586100548604315140162794102765186701028962732703072170209041856316722141351501948475111563999063188090490498583298717427680912805954
  significant      cell.type
1          no RightVentricle
2        <NA>           <NA>
3        <NA>           <NA>
4        <NA>           <NA>
5        <NA>           <NA>
6        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069503803.bed -b /tmp/RtmpTQN7LL/b_32903c534858.bed -u
[1] 211
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903ab75515.bed -b /tmp/RtmpTQN7LL/b_32905c8443c.bed -u
[1] 348
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901ee65877.bed -b /tmp/RtmpTQN7LL/b_329038157166.bed -u
[1] 276
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902e4b3341.bed -b /tmp/RtmpTQN7LL/b_329038ba0541.bed -u
[1] 334
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290386da6a9.bed -b /tmp/RtmpTQN7LL/b_3290366dfded.bed -u
[1] 342
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329066b0cbf9.bed -b /tmp/RtmpTQN7LL/b_329071d22da3.bed -u
[1] 376
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906f008b6c.bed -b /tmp/RtmpTQN7LL/b_329031b76af4.bed -u
[1] 308
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329078dd10d1.bed -b /tmp/RtmpTQN7LL/b_32901016eaac.bed -u
[1] 338
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902bb0da44.bed -b /tmp/RtmpTQN7LL/b_32907132e7cd.bed -u
[1] 354
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329074c00499.bed -b /tmp/RtmpTQN7LL/b_32901e6c289c.bed -u
[1] 322
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904840003c.bed -b /tmp/RtmpTQN7LL/b_329054132a82.bed -u
[1] 285
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906f914ec6.bed -b /tmp/RtmpTQN7LL/b_329062ece031.bed -u
[1] 299
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901f185d52.bed -b /tmp/RtmpTQN7LL/b_32907e6f555c.bed -u
[1] 335
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061208697.bed -b /tmp/RtmpTQN7LL/b_329025a95efa.bed -u
[1] 354
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329063b16639.bed -b /tmp/RtmpTQN7LL/b_32901bb674bf.bed -u
[1] 320
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906270b2bd.bed -b /tmp/RtmpTQN7LL/b_32903dd33b93.bed -u
[1] 370
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329054100144.bed -b /tmp/RtmpTQN7LL/b_329055f0023a.bed -u
[1] 267
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903d7b7bbe.bed -b /tmp/RtmpTQN7LL/b_3290745d90e0.bed -u
[1] 341
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290454fb8cd.bed -b /tmp/RtmpTQN7LL/b_3290473e248c.bed -u
[1] 307
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329037391660.bed -b /tmp/RtmpTQN7LL/b_32901664bb0a.bed -u
[1] 336
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904a732498.bed -b /tmp/RtmpTQN7LL/b_32907152a37e.bed -u
[1] 347
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048796dff.bed -b /tmp/RtmpTQN7LL/b_329026207734.bed -u
[1] 317
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903e941e11.bed -b /tmp/RtmpTQN7LL/b_329066afcc18.bed -u
[1] 346
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904e6ae5.bed -b /tmp/RtmpTQN7LL/b_3290709b97a9.bed -u
[1] 303
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061d1e5e7.bed -b /tmp/RtmpTQN7LL/b_329034586afe.bed -u
[1] 299
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022f682bf.bed -b /tmp/RtmpTQN7LL/b_329050ceb773.bed -u
[1] 347
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050bdc4a6.bed -b /tmp/RtmpTQN7LL/b_32903eed07bc.bed -u
[1] 298
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329010b515b9.bed -b /tmp/RtmpTQN7LL/b_3290579719f2.bed -u
[1] 330
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329066a96653.bed -b /tmp/RtmpTQN7LL/b_32901ccc9452.bed -u
[1] 281
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013d7017e.bed -b /tmp/RtmpTQN7LL/b_3290547036fc.bed -u
[1] 271
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901da71a88.bed -b /tmp/RtmpTQN7LL/b_3290f27c2a8.bed -u
[1] 334
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290607ee09d.bed -b /tmp/RtmpTQN7LL/b_3290511727d7.bed -u
[1] 286
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904d607839.bed -b /tmp/RtmpTQN7LL/b_329034eefc99.bed -u
[1] 321
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059ca5f32.bed -b /tmp/RtmpTQN7LL/b_329026269c88.bed -u
[1] 345
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ac05e45.bed -b /tmp/RtmpTQN7LL/b_32907b5454fc.bed -u
[1] 302
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904b39590a.bed -b /tmp/RtmpTQN7LL/b_329045fe49c6.bed -u
[1] 284
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905eff5dab.bed -b /tmp/RtmpTQN7LL/b_329054604eb7.bed -u
[1] 331
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053d52bca.bed -b /tmp/RtmpTQN7LL/b_3290de7519c.bed -u
[1] 345
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329021c4ea63.bed -b /tmp/RtmpTQN7LL/b_3290168fd8b.bed -u
[1] 354
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904b5bb57.bed -b /tmp/RtmpTQN7LL/b_32907bffac4d.bed -u
[1] 259
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012a53d82.bed -b /tmp/RtmpTQN7LL/b_329051f0e569.bed -u
[1] 318
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053b9d5eb.bed -b /tmp/RtmpTQN7LL/b_3290403ff4c5.bed -u
[1] 303
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072f8918.bed -b /tmp/RtmpTQN7LL/b_32903b88f6bf.bed -u
[1] 279
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906440b874.bed -b /tmp/RtmpTQN7LL/b_32906bc235f5.bed -u
[1] 285
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329054fc6feb.bed -b /tmp/RtmpTQN7LL/b_3290484d54af.bed -u
[1] 329
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290678b1ec4.bed -b /tmp/RtmpTQN7LL/b_3290144bf10d.bed -u
[1] 281
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903b3f26ba.bed -b /tmp/RtmpTQN7LL/b_329014989e41.bed -u
[1] 325
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901dafc6ba.bed -b /tmp/RtmpTQN7LL/b_3290b5a45ef.bed -u
[1] 353
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329073a54e07.bed -b /tmp/RtmpTQN7LL/b_32901942f42f.bed -u
[1] 290
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329078ad9630.bed -b /tmp/RtmpTQN7LL/b_329017dc51b9.bed -u
[1] 334
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c9b58e4.bed -b /tmp/RtmpTQN7LL/b_329070d66c5c.bed -u
[1] 352
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c860a3b.bed -b /tmp/RtmpTQN7LL/b_329013f5af2c.bed -u
[1] 352
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904fc37ea2.bed -b /tmp/RtmpTQN7LL/b_32906af5b20b.bed -u
[1] 325
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907fc5e0c2.bed -b /tmp/RtmpTQN7LL/b_32901d15a499.bed -u
[1] 313
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290582e4c5a.bed -b /tmp/RtmpTQN7LL/b_3290155316e6.bed -u
[1] 286
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329062eb701c.bed -b /tmp/RtmpTQN7LL/b_329076fcbd4b.bed -u
[1] 357
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329028941cf2.bed -b /tmp/RtmpTQN7LL/b_329011dc194e.bed -u
[1] 324
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907557d597.bed -b /tmp/RtmpTQN7LL/b_329073ef0dfe.bed -u
[1] 320
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290488d140e.bed -b /tmp/RtmpTQN7LL/b_3290b2885fd.bed -u
[1] 325
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059af958d.bed -b /tmp/RtmpTQN7LL/b_329021deeec9.bed -u
[1] 381
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329068ce40ae.bed -b /tmp/RtmpTQN7LL/b_32903c0f283a.bed -u
[1] 342
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906cbf8f19.bed -b /tmp/RtmpTQN7LL/b_3290126f99d9.bed -u
[1] 309
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329070e8fe85.bed -b /tmp/RtmpTQN7LL/b_3290616ed166.bed -u
[1] 357
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329030542331.bed -b /tmp/RtmpTQN7LL/b_329012e400d.bed -u
[1] 340
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329018f310b1.bed -b /tmp/RtmpTQN7LL/b_32904648ef67.bed -u
[1] 319
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907b952458.bed -b /tmp/RtmpTQN7LL/b_329060887dd9.bed -u
[1] 319
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329037ff44ca.bed -b /tmp/RtmpTQN7LL/b_32905ed7b9e9.bed -u
[1] 377
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903bd7c092.bed -b /tmp/RtmpTQN7LL/b_32904472e09.bed -u
[1] 341
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902baa7ebd.bed -b /tmp/RtmpTQN7LL/b_329030ad4ab0.bed -u
[1] 288
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329025c587f7.bed -b /tmp/RtmpTQN7LL/b_32905b174f8c.bed -u
[1] 302
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290500ce606.bed -b /tmp/RtmpTQN7LL/b_329049b1baae.bed -u
[1] 311
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290331f01cc.bed -b /tmp/RtmpTQN7LL/b_3290111e7ff5.bed -u
[1] 354
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905dfad665.bed -b /tmp/RtmpTQN7LL/b_32907d2f4fdd.bed -u
[1] 334
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069fea5fb.bed -b /tmp/RtmpTQN7LL/b_329025202673.bed -u
[1] 307
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329076a94956.bed -b /tmp/RtmpTQN7LL/b_32903c2ea262.bed -u
[1] 297
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048e14e11.bed -b /tmp/RtmpTQN7LL/b_3290d76ea44.bed -u
[1] 324
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902d2ccc42.bed -b /tmp/RtmpTQN7LL/b_329018ab7b49.bed -u
[1] 351
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c744c2.bed -b /tmp/RtmpTQN7LL/b_3290216d5528.bed -u
[1] 358
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290739a9933.bed -b /tmp/RtmpTQN7LL/b_3290f2c47d5.bed -u
[1] 287
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290378c8061.bed -b /tmp/RtmpTQN7LL/b_329035e5a7df.bed -u
[1] 309
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290614808ae.bed -b /tmp/RtmpTQN7LL/b_329043497ede.bed -u
[1] 305
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b9f9a79.bed -b /tmp/RtmpTQN7LL/b_32902f986f7a.bed -u
[1] 324
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905613111c.bed -b /tmp/RtmpTQN7LL/b_329044a7716d.bed -u
[1] 307
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290281b0dea.bed -b /tmp/RtmpTQN7LL/b_32904da775c0.bed -u
[1] 341
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040d08cca.bed -b /tmp/RtmpTQN7LL/b_32901e09bbba.bed -u
[1] 342
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329037f2568d.bed -b /tmp/RtmpTQN7LL/b_329041bd6287.bed -u
[1] 308
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290797a134.bed -b /tmp/RtmpTQN7LL/b_32905cff6c79.bed -u
[1] 311
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ce76785.bed -b /tmp/RtmpTQN7LL/b_32907094bdd6.bed -u
[1] 318
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290580c60ba.bed -b /tmp/RtmpTQN7LL/b_329079261b9d.bed -u
[1] 324
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290643db524.bed -b /tmp/RtmpTQN7LL/b_32907943c1d8.bed -u
[1] 333
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039d9291b.bed -b /tmp/RtmpTQN7LL/b_32906ffd0317.bed -u
[1] 323
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906415f9ec.bed -b /tmp/RtmpTQN7LL/b_329065f73ed8.bed -u
[1] 335
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329070ca5ada.bed -b /tmp/RtmpTQN7LL/b_3290261bce73.bed -u
[1] 304
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901fac7348.bed -b /tmp/RtmpTQN7LL/b_3290869fbc2.bed -u
[1] 335
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904026206b.bed -b /tmp/RtmpTQN7LL/b_3290213e61.bed -u
[1] 344
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022b95982.bed -b /tmp/RtmpTQN7LL/b_32906922a9a7.bed -u
[1] 363
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907976f132.bed -b /tmp/RtmpTQN7LL/b_329063a14c0f.bed -u
[1] 343
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a22ee86.bed -b /tmp/RtmpTQN7LL/b_32905aa7e833.bed -u
[1] 334
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906398b48d.bed -b /tmp/RtmpTQN7LL/b_329060f4be6d.bed -u
[1] 341
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d840944.bed -b /tmp/RtmpTQN7LL/b_32901b00709a.bed -u
[1] 262
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... FAIL
   The input for object is not *lexographically* ordered!
   This can cause unexpected results for some set operations.
   try: x <- bedr.sort.region(x)
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907aa0c669.bed -b /tmp/RtmpTQN7LL/b_329077502ae4.bed -u
[1] 285
[1] "101 ctrl number"
$disease
[1] "T2D"

$fg.val
[1] 211

$bg.stdev
[1] 2.707844

$bg.mean
[1] 322.52

$z.score
[1] -41.18405

$p.val
[1] 1

$significant
[1] "no"

$cell.type
[1] "RightVentricle"

  disease fg.val  bg.stdev bg.mean   z.score
1     T1D    112 2.2717136  157.82 -20.16980
2     T1D     84 1.2036187   68.83  12.60366
3     T1D    103 1.1415615   65.13  33.17386
4     T1D    107 1.2580231   71.98  27.83733
5     T1D     76 1.0858595   56.90  17.58975
6     T1D     63 0.9678071   46.54  17.00752
7    <NA>    211 2.7078442  322.52 -41.18405
                                                                                                                                                                                                                                                      p.val
1 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2 0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5 0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
6 0.0000000000000000000000000000000000000000000000000000000000000000361143175379509856604364131827627416166015383339051586100548604315140162794102765186701028962732703072170209041856316722141351501948475111563999063188090490498583298717427680912805954
7 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  significant      cell.type
1          no RightVentricle
2        <NA>           <NA>
3        <NA>           <NA>
4        <NA>           <NA>
5        <NA>           <NA>
6        <NA>           <NA>
7          no RightVentricle
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b91f4a.bed -b /tmp/RtmpTQN7LL/b_32902876feb7.bed -u
[1] 298
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906e9dff37.bed -b /tmp/RtmpTQN7LL/b_3290369640ee.bed -u
[1] 152
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329066bb0932.bed -b /tmp/RtmpTQN7LL/b_3290609d6142.bed -u
[1] 108
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329066deaef2.bed -b /tmp/RtmpTQN7LL/b_32906c4a9b9c.bed -u
[1] 143
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290e978a8b.bed -b /tmp/RtmpTQN7LL/b_3290648e59ab.bed -u
[1] 144
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061e08a8d.bed -b /tmp/RtmpTQN7LL/b_32906949c96b.bed -u
[1] 169
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329030e545e0.bed -b /tmp/RtmpTQN7LL/b_329016e064c.bed -u
[1] 133
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905bcd7895.bed -b /tmp/RtmpTQN7LL/b_3290fc2a9cb.bed -u
[1] 121
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c6cb159.bed -b /tmp/RtmpTQN7LL/b_329021b9b9e7.bed -u
[1] 129
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f1cd43d.bed -b /tmp/RtmpTQN7LL/b_329044a9f805.bed -u
[1] 159
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a9cc717.bed -b /tmp/RtmpTQN7LL/b_329011f67ce6.bed -u
[1] 106
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069eb4762.bed -b /tmp/RtmpTQN7LL/b_32904f223a9d.bed -u
[1] 139
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290264b5229.bed -b /tmp/RtmpTQN7LL/b_32903961e972.bed -u
[1] 127
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329074ff9078.bed -b /tmp/RtmpTQN7LL/b_329050eebfb2.bed -u
[1] 147
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906458e91a.bed -b /tmp/RtmpTQN7LL/b_3290330cd515.bed -u
[1] 119
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905085fb00.bed -b /tmp/RtmpTQN7LL/b_32905194542c.bed -u
[1] 147
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905e2b82f2.bed -b /tmp/RtmpTQN7LL/b_32906ff3c790.bed -u
[1] 122
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329033278e16.bed -b /tmp/RtmpTQN7LL/b_32906c39816f.bed -u
[1] 161
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329032d4de5f.bed -b /tmp/RtmpTQN7LL/b_329079b49719.bed -u
[1] 139
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32909af66fe.bed -b /tmp/RtmpTQN7LL/b_32902236b7a4.bed -u
[1] 164
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902acf5d2d.bed -b /tmp/RtmpTQN7LL/b_32904ded0662.bed -u
[1] 141
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022aae145.bed -b /tmp/RtmpTQN7LL/b_32901f94086f.bed -u
[1] 155
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329024a23cdd.bed -b /tmp/RtmpTQN7LL/b_32906003c910.bed -u
[1] 152
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290175b463d.bed -b /tmp/RtmpTQN7LL/b_32904a60b4a.bed -u
[1] 128
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906d2f7cd8.bed -b /tmp/RtmpTQN7LL/b_32906cfafb1b.bed -u
[1] 136
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053cf42c3.bed -b /tmp/RtmpTQN7LL/b_329069b4aa61.bed -u
[1] 135
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050035349.bed -b /tmp/RtmpTQN7LL/b_329057057053.bed -u
[1] 116
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903827e0b4.bed -b /tmp/RtmpTQN7LL/b_32905e1a4666.bed -u
[1] 131
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905970496d.bed -b /tmp/RtmpTQN7LL/b_329051399c41.bed -u
[1] 136
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067c3dacc.bed -b /tmp/RtmpTQN7LL/b_329065f339ae.bed -u
[1] 132
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290371486d0.bed -b /tmp/RtmpTQN7LL/b_329018e0c893.bed -u
[1] 141
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32909f34a22.bed -b /tmp/RtmpTQN7LL/b_32903884104c.bed -u
[1] 130
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290d03f234.bed -b /tmp/RtmpTQN7LL/b_32905f47ce0c.bed -u
[1] 138
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019cd8d5e.bed -b /tmp/RtmpTQN7LL/b_32907a61ef7f.bed -u
[1] 170
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067befb24.bed -b /tmp/RtmpTQN7LL/b_32906219ea72.bed -u
[1] 134
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290492cf2d2.bed -b /tmp/RtmpTQN7LL/b_329026ecbd42.bed -u
[1] 126
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329015a623ea.bed -b /tmp/RtmpTQN7LL/b_32901b4efae9.bed -u
[1] 146
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906b7c5318.bed -b /tmp/RtmpTQN7LL/b_329042d5c217.bed -u
[1] 161
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c5dee26.bed -b /tmp/RtmpTQN7LL/b_32906e48d2e4.bed -u
[1] 154
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903befc9ff.bed -b /tmp/RtmpTQN7LL/b_329020a2ba8a.bed -u
[1] 110
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329066a687b5.bed -b /tmp/RtmpTQN7LL/b_32904144896f.bed -u
[1] 123
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904cfc3724.bed -b /tmp/RtmpTQN7LL/b_329053c903a.bed -u
[1] 147
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031da2ee9.bed -b /tmp/RtmpTQN7LL/b_329063c3b429.bed -u
[1] 109
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290119bbe62.bed -b /tmp/RtmpTQN7LL/b_329048cb91d1.bed -u
[1] 127
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290104f8c29.bed -b /tmp/RtmpTQN7LL/b_32904a0177b1.bed -u
[1] 138
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031628d2.bed -b /tmp/RtmpTQN7LL/b_3290415ae373.bed -u
[1] 124
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290d70e955.bed -b /tmp/RtmpTQN7LL/b_32904b7c0598.bed -u
[1] 131
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d0e086.bed -b /tmp/RtmpTQN7LL/b_32906ce488b.bed -u
[1] 157
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329045cada1e.bed -b /tmp/RtmpTQN7LL/b_32903471f47f.bed -u
[1] 125
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902dc03bed.bed -b /tmp/RtmpTQN7LL/b_32903e3bab94.bed -u
[1] 155
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904b4ae387.bed -b /tmp/RtmpTQN7LL/b_3290234668dd.bed -u
[1] 174
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329015895565.bed -b /tmp/RtmpTQN7LL/b_32902295201f.bed -u
[1] 171
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903e0a2e9a.bed -b /tmp/RtmpTQN7LL/b_329033fd71bb.bed -u
[1] 147
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290228c1d3c.bed -b /tmp/RtmpTQN7LL/b_3290399d0b35.bed -u
[1] 137
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329011119900.bed -b /tmp/RtmpTQN7LL/b_32903cafb4d6.bed -u
[1] 118
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290287c83d1.bed -b /tmp/RtmpTQN7LL/b_32902fc164a5.bed -u
[1] 160
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022edba47.bed -b /tmp/RtmpTQN7LL/b_329020c784c0.bed -u
[1] 140
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053851e5d.bed -b /tmp/RtmpTQN7LL/b_329041522713.bed -u
[1] 126
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290784e8ee2.bed -b /tmp/RtmpTQN7LL/b_32907be0170e.bed -u
[1] 133
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902da2e65.bed -b /tmp/RtmpTQN7LL/b_32904fe5a1ab.bed -u
[1] 181
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013664131.bed -b /tmp/RtmpTQN7LL/b_329035005b1.bed -u
[1] 143
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012996e52.bed -b /tmp/RtmpTQN7LL/b_32903337a795.bed -u
[1] 148
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c320998.bed -b /tmp/RtmpTQN7LL/b_32902c3673b2.bed -u
[1] 140
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329065df30b6.bed -b /tmp/RtmpTQN7LL/b_3290322a97b8.bed -u
[1] 144
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290778ea3ff.bed -b /tmp/RtmpTQN7LL/b_32907db6ec6e.bed -u
[1] 146
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050622905.bed -b /tmp/RtmpTQN7LL/b_32905c6cccdc.bed -u
[1] 137
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290bc620ec.bed -b /tmp/RtmpTQN7LL/b_32903b8b5a29.bed -u
[1] 143
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061e7155f.bed -b /tmp/RtmpTQN7LL/b_329023f43bb4.bed -u
[1] 155
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906105683a.bed -b /tmp/RtmpTQN7LL/b_32906ecbf875.bed -u
[1] 131
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290d3ddcb5.bed -b /tmp/RtmpTQN7LL/b_3290150b5efe.bed -u
[1] 143
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f48a3e8.bed -b /tmp/RtmpTQN7LL/b_3290257c2ba9.bed -u
[1] 138
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290416ec51c.bed -b /tmp/RtmpTQN7LL/b_3290f9edd10.bed -u
[1] 152
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f9c5063.bed -b /tmp/RtmpTQN7LL/b_32907050b57a.bed -u
[1] 139
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012e3257.bed -b /tmp/RtmpTQN7LL/b_32901c70ef77.bed -u
[1] 138
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32908424e04.bed -b /tmp/RtmpTQN7LL/b_3290667099a9.bed -u
[1] 116
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902353e11c.bed -b /tmp/RtmpTQN7LL/b_329062c11e9b.bed -u
[1] 153
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290360b7c4d.bed -b /tmp/RtmpTQN7LL/b_329069b8b94b.bed -u
[1] 159
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290783fbf5b.bed -b /tmp/RtmpTQN7LL/b_32903573b878.bed -u
[1] 144
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903803ecc1.bed -b /tmp/RtmpTQN7LL/b_32902ed0ec7c.bed -u
[1] 132
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907f6428fe.bed -b /tmp/RtmpTQN7LL/b_329067650055.bed -u
[1] 134
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290632bf188.bed -b /tmp/RtmpTQN7LL/b_32901408e93e.bed -u
[1] 143
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901721e26a.bed -b /tmp/RtmpTQN7LL/b_329076bd91aa.bed -u
[1] 129
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013d2118b.bed -b /tmp/RtmpTQN7LL/b_32905b42dc82.bed -u
[1] 117
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290234ef1a7.bed -b /tmp/RtmpTQN7LL/b_32906f6e7fcc.bed -u
[1] 150
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290e7a0e1c.bed -b /tmp/RtmpTQN7LL/b_32901ebf342d.bed -u
[1] 154
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290361ffd2e.bed -b /tmp/RtmpTQN7LL/b_32905ca61108.bed -u
[1] 135
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290d6a0d94.bed -b /tmp/RtmpTQN7LL/b_32902f28c507.bed -u
[1] 138
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290dcf74c9.bed -b /tmp/RtmpTQN7LL/b_329072165714.bed -u
[1] 112
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901ec6e6d5.bed -b /tmp/RtmpTQN7LL/b_329012cbcb8d.bed -u
[1] 136
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a17a27b.bed -b /tmp/RtmpTQN7LL/b_32905f3d4d5a.bed -u
[1] 141
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904d15d6ea.bed -b /tmp/RtmpTQN7LL/b_3290a087410.bed -u
[1] 133
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906608d18c.bed -b /tmp/RtmpTQN7LL/b_3290466660a4.bed -u
[1] 140
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903525a2f2.bed -b /tmp/RtmpTQN7LL/b_32906bba5b48.bed -u
[1] 119
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a9fdadc.bed -b /tmp/RtmpTQN7LL/b_32906af6ae12.bed -u
[1] 140
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329015a95685.bed -b /tmp/RtmpTQN7LL/b_32907c5b1aba.bed -u
[1] 138
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329021b70ed6.bed -b /tmp/RtmpTQN7LL/b_32901cfab925.bed -u
[1] 166
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067587f3f.bed -b /tmp/RtmpTQN7LL/b_32905f083977.bed -u
[1] 144
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012ad8528.bed -b /tmp/RtmpTQN7LL/b_3290390234b1.bed -u
[1] 138
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903293e2d4.bed -b /tmp/RtmpTQN7LL/b_3290756a62cd.bed -u
[1] 153
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329065629cd1.bed -b /tmp/RtmpTQN7LL/b_32905cf73b98.bed -u
[1] 119
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906b2f6c47.bed -b /tmp/RtmpTQN7LL/b_329019d402a2.bed -u
[1] 138
[1] "101 ctrl number"
$disease
[1] "T2D"

$fg.val
[1] 298

$bg.stdev
[1] 1.529388

$bg.mean
[1] 139.42

$z.score
[1] 103.6886

$p.val
[1] 0

$significant
[1] "yes"

$cell.type
[1] "Alpha"

  disease fg.val  bg.stdev bg.mean   z.score
1     T1D    112 2.2717136  157.82 -20.16980
2     T1D     84 1.2036187   68.83  12.60366
3     T1D    103 1.1415615   65.13  33.17386
4     T1D    107 1.2580231   71.98  27.83733
5     T1D     76 1.0858595   56.90  17.58975
6     T1D     63 0.9678071   46.54  17.00752
7    <NA>    211 2.7078442  322.52 -41.18405
8    <NA>    298 1.5293875  139.42 103.68857
                                                                                                                                                                                                                                                      p.val
1 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2 0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5 0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
6 0.0000000000000000000000000000000000000000000000000000000000000000361143175379509856604364131827627416166015383339051586100548604315140162794102765186701028962732703072170209041856316722141351501948475111563999063188090490498583298717427680912805954
7 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  significant      cell.type
1          no RightVentricle
2        <NA>           <NA>
3        <NA>           <NA>
4        <NA>           <NA>
5        <NA>           <NA>
6        <NA>           <NA>
7          no RightVentricle
8        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904b17a599.bed -b /tmp/RtmpTQN7LL/b_3290562599a5.bed -u
[1] 311
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903505f2c5.bed -b /tmp/RtmpTQN7LL/b_329046a2a5cc.bed -u
[1] 146
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329081da1ba.bed -b /tmp/RtmpTQN7LL/b_32903a30b839.bed -u
[1] 104
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290100f7294.bed -b /tmp/RtmpTQN7LL/b_329023193ab5.bed -u
[1] 135
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329041081ddf.bed -b /tmp/RtmpTQN7LL/b_3290754e5f29.bed -u
[1] 134
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290615cef85.bed -b /tmp/RtmpTQN7LL/b_329033af20c.bed -u
[1] 152
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290729429fd.bed -b /tmp/RtmpTQN7LL/b_3290442cd1f6.bed -u
[1] 131
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329014f60a8a.bed -b /tmp/RtmpTQN7LL/b_32904a498d18.bed -u
[1] 117
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902003d5.bed -b /tmp/RtmpTQN7LL/b_329032d04aeb.bed -u
[1] 121
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c319256.bed -b /tmp/RtmpTQN7LL/b_32905f2cd7c8.bed -u
[1] 138
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c79fc59.bed -b /tmp/RtmpTQN7LL/b_32902916c0ef.bed -u
[1] 103
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290758aff.bed -b /tmp/RtmpTQN7LL/b_329061bb12d2.bed -u
[1] 124
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329023af0fa5.bed -b /tmp/RtmpTQN7LL/b_329012622cb4.bed -u
[1] 112
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329014749bcc.bed -b /tmp/RtmpTQN7LL/b_32905a3478a.bed -u
[1] 142
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290449cccf2.bed -b /tmp/RtmpTQN7LL/b_32901d1218ab.bed -u
[1] 114
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290445fe747.bed -b /tmp/RtmpTQN7LL/b_3290427e4b1e.bed -u
[1] 142
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c186694.bed -b /tmp/RtmpTQN7LL/b_32904b81ac17.bed -u
[1] 121
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012dc986b.bed -b /tmp/RtmpTQN7LL/b_329026606056.bed -u
[1] 153
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329052346252.bed -b /tmp/RtmpTQN7LL/b_3290c6eb52f.bed -u
[1] 133
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905504900.bed -b /tmp/RtmpTQN7LL/b_329049ec33e3.bed -u
[1] 154
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067b071ad.bed -b /tmp/RtmpTQN7LL/b_329025110e6e.bed -u
[1] 130
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903497f71e.bed -b /tmp/RtmpTQN7LL/b_3290b899949.bed -u
[1] 153
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059117d54.bed -b /tmp/RtmpTQN7LL/b_329075ba46f.bed -u
[1] 139
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290188892b3.bed -b /tmp/RtmpTQN7LL/b_32901c85bfa0.bed -u
[1] 122
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290512e87de.bed -b /tmp/RtmpTQN7LL/b_32905b323e0a.bed -u
[1] 132
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907719a6c4.bed -b /tmp/RtmpTQN7LL/b_32906570b32.bed -u
[1] 124
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329041d87f43.bed -b /tmp/RtmpTQN7LL/b_329064af062b.bed -u
[1] 102
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290e92effc.bed -b /tmp/RtmpTQN7LL/b_329033a60898.bed -u
[1] 122
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290484950a.bed -b /tmp/RtmpTQN7LL/b_32907f6aeb4e.bed -u
[1] 125
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f99a2a.bed -b /tmp/RtmpTQN7LL/b_32907eba93f.bed -u
[1] 124
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329055dbdd13.bed -b /tmp/RtmpTQN7LL/b_3290608439ee.bed -u
[1] 138
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907e5743cd.bed -b /tmp/RtmpTQN7LL/b_3290218a4fe0.bed -u
[1] 125
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901f940139.bed -b /tmp/RtmpTQN7LL/b_32903a8d0c83.bed -u
[1] 129
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907c87b361.bed -b /tmp/RtmpTQN7LL/b_32904898c1d0.bed -u
[1] 155
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906948f3fb.bed -b /tmp/RtmpTQN7LL/b_329013fc3e27.bed -u
[1] 128
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329062bd242c.bed -b /tmp/RtmpTQN7LL/b_3290427aff28.bed -u
[1] 124
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329063d67a9a.bed -b /tmp/RtmpTQN7LL/b_329010fc8f02.bed -u
[1] 140
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290734ed8ce.bed -b /tmp/RtmpTQN7LL/b_3290588ae3d1.bed -u
[1] 154
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901bf069e.bed -b /tmp/RtmpTQN7LL/b_32904a4853ef.bed -u
[1] 144
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901bd8885f.bed -b /tmp/RtmpTQN7LL/b_329035d190f.bed -u
[1] 103
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329024f09671.bed -b /tmp/RtmpTQN7LL/b_329041f1f4fa.bed -u
[1] 113
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902701676f.bed -b /tmp/RtmpTQN7LL/b_32903e238a4e.bed -u
[1] 138
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290691c1cd2.bed -b /tmp/RtmpTQN7LL/b_329037ac563d.bed -u
[1] 105
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904d050382.bed -b /tmp/RtmpTQN7LL/b_329044ef8e5a.bed -u
[1] 118
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a665943.bed -b /tmp/RtmpTQN7LL/b_32904c6ffa4.bed -u
[1] 126
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329077424973.bed -b /tmp/RtmpTQN7LL/b_32906d834751.bed -u
[1] 118
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031f1835d.bed -b /tmp/RtmpTQN7LL/b_3290669146d6.bed -u
[1] 127
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019124833.bed -b /tmp/RtmpTQN7LL/b_3290105a24b6.bed -u
[1] 153
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903b502f9e.bed -b /tmp/RtmpTQN7LL/b_3290769829eb.bed -u
[1] 119
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290637ec105.bed -b /tmp/RtmpTQN7LL/b_3290160cd1bf.bed -u
[1] 148
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903676ef38.bed -b /tmp/RtmpTQN7LL/b_329031b3d0ea.bed -u
[1] 159
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329032b5595f.bed -b /tmp/RtmpTQN7LL/b_32901bdf60d5.bed -u
[1] 162
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902219bee1.bed -b /tmp/RtmpTQN7LL/b_3290667c2d4d.bed -u
[1] 140
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039218dec.bed -b /tmp/RtmpTQN7LL/b_3290116b92d2.bed -u
[1] 131
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329062e51645.bed -b /tmp/RtmpTQN7LL/b_32902442d0fa.bed -u
[1] 111
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290433bcf48.bed -b /tmp/RtmpTQN7LL/b_32907845004f.bed -u
[1] 149
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a15e9aa.bed -b /tmp/RtmpTQN7LL/b_32902caaeac8.bed -u
[1] 132
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329076d97081.bed -b /tmp/RtmpTQN7LL/b_329050cd9fde.bed -u
[1] 115
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329020b27c3.bed -b /tmp/RtmpTQN7LL/b_3290365573bc.bed -u
[1] 121
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c0e8aa0.bed -b /tmp/RtmpTQN7LL/b_32903ce8456a.bed -u
[1] 176
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290531b6f9f.bed -b /tmp/RtmpTQN7LL/b_3290627e715e.bed -u
[1] 133
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902ae1a92d.bed -b /tmp/RtmpTQN7LL/b_329077987d2b.bed -u
[1] 140
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061136ef4.bed -b /tmp/RtmpTQN7LL/b_3290407fc283.bed -u
[1] 130
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290707434ee.bed -b /tmp/RtmpTQN7LL/b_329042f71bee.bed -u
[1] 133
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290fc2a6f5.bed -b /tmp/RtmpTQN7LL/b_3290249e9925.bed -u
[1] 133
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067309224.bed -b /tmp/RtmpTQN7LL/b_329061baf33d.bed -u
[1] 133
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290997c0d8.bed -b /tmp/RtmpTQN7LL/b_3290573c72a3.bed -u
[1] 137
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904d62deb9.bed -b /tmp/RtmpTQN7LL/b_32904f036b52.bed -u
[1] 146
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902d4a73d9.bed -b /tmp/RtmpTQN7LL/b_329072208441.bed -u
[1] 116
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903f8eac25.bed -b /tmp/RtmpTQN7LL/b_3290a216b8e.bed -u
[1] 139
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329075aebdea.bed -b /tmp/RtmpTQN7LL/b_3290572a4c46.bed -u
[1] 124
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040fc262f.bed -b /tmp/RtmpTQN7LL/b_3290efe97fb.bed -u
[1] 140
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c5ae7bc.bed -b /tmp/RtmpTQN7LL/b_329049922b7c.bed -u
[1] 139
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902ce3651e.bed -b /tmp/RtmpTQN7LL/b_329049077e0.bed -u
[1] 128
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329043444cce.bed -b /tmp/RtmpTQN7LL/b_3290347fadd4.bed -u
[1] 114
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c841846.bed -b /tmp/RtmpTQN7LL/b_32906efbd2df.bed -u
[1] 141
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329063ad5892.bed -b /tmp/RtmpTQN7LL/b_329058c68f6.bed -u
[1] 148
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a248a5c.bed -b /tmp/RtmpTQN7LL/b_329042b49a18.bed -u
[1] 127
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019fb5ec1.bed -b /tmp/RtmpTQN7LL/b_329051c2e5c7.bed -u
[1] 123
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905f819070.bed -b /tmp/RtmpTQN7LL/b_329011a23baf.bed -u
[1] 124
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907fbe4ba4.bed -b /tmp/RtmpTQN7LL/b_32906419f032.bed -u
[1] 139
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290698c02b5.bed -b /tmp/RtmpTQN7LL/b_32905d6c124c.bed -u
[1] 125
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290425c5adc.bed -b /tmp/RtmpTQN7LL/b_3290473c0605.bed -u
[1] 111
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f5af822.bed -b /tmp/RtmpTQN7LL/b_32905629c63b.bed -u
[1] 147
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290786398a5.bed -b /tmp/RtmpTQN7LL/b_32904696e5a2.bed -u
[1] 133
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c76a87e.bed -b /tmp/RtmpTQN7LL/b_32904343f0f1.bed -u
[1] 130
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290236e2e44.bed -b /tmp/RtmpTQN7LL/b_32902649efa.bed -u
[1] 133
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290413291b5.bed -b /tmp/RtmpTQN7LL/b_3290194f8915.bed -u
[1] 109
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a836ce2.bed -b /tmp/RtmpTQN7LL/b_329072349e8a.bed -u
[1] 131
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069135228.bed -b /tmp/RtmpTQN7LL/b_32906f0e59c7.bed -u
[1] 139
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329018cd8317.bed -b /tmp/RtmpTQN7LL/b_32902c77c82e.bed -u
[1] 131
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904cfb193d.bed -b /tmp/RtmpTQN7LL/b_32907e2a01b4.bed -u
[1] 131
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329027f93ce9.bed -b /tmp/RtmpTQN7LL/b_3290667694c.bed -u
[1] 114
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329034c5f117.bed -b /tmp/RtmpTQN7LL/b_3290a1ac001.bed -u
[1] 138
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d7e9a3c.bed -b /tmp/RtmpTQN7LL/b_3290caaf0f3.bed -u
[1] 133
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901f18bb7d.bed -b /tmp/RtmpTQN7LL/b_32906199b4b1.bed -u
[1] 153
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329044d11ced.bed -b /tmp/RtmpTQN7LL/b_32904bcf2a35.bed -u
[1] 138
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329050b370dc.bed -b /tmp/RtmpTQN7LL/b_3290125dd2d4.bed -u
[1] 132
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907045be8c.bed -b /tmp/RtmpTQN7LL/b_32902a4f542b.bed -u
[1] 148
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901f7167c2.bed -b /tmp/RtmpTQN7LL/b_32902102f03c.bed -u
[1] 110
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904759c221.bed -b /tmp/RtmpTQN7LL/b_329077dbb910.bed -u
[1] 134
[1] "101 ctrl number"
$disease
[1] "T2D"

$fg.val
[1] 311

$bg.stdev
[1] 1.435851

$bg.mean
[1] 131.57

$z.score
[1] 124.9642

$p.val
[1] 0

$significant
[1] "yes"

$cell.type
[1] "Beta"

  disease fg.val  bg.stdev bg.mean   z.score
1     T1D    112 2.2717136  157.82 -20.16980
2     T1D     84 1.2036187   68.83  12.60366
3     T1D    103 1.1415615   65.13  33.17386
4     T1D    107 1.2580231   71.98  27.83733
5     T1D     76 1.0858595   56.90  17.58975
6     T1D     63 0.9678071   46.54  17.00752
7    <NA>    211 2.7078442  322.52 -41.18405
8    <NA>    298 1.5293875  139.42 103.68857
9    <NA>    311 1.4358509  131.57 124.96423
                                                                                                                                                                                                                                                      p.val
1 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2 0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5 0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
6 0.0000000000000000000000000000000000000000000000000000000000000000361143175379509856604364131827627416166015383339051586100548604315140162794102765186701028962732703072170209041856316722141351501948475111563999063188090490498583298717427680912805954
7 1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  significant      cell.type
1          no RightVentricle
2        <NA>           <NA>
3        <NA>           <NA>
4        <NA>           <NA>
5        <NA>           <NA>
6        <NA>           <NA>
7          no RightVentricle
8        <NA>           <NA>
9        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904aeefa9a.bed -b /tmp/RtmpTQN7LL/b_32907c74b2ee.bed -u
[1] 278
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f6ab1de.bed -b /tmp/RtmpTQN7LL/b_3290599cc9a1.bed -u
[1] 165
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290413277aa.bed -b /tmp/RtmpTQN7LL/b_329024a05ea2.bed -u
[1] 117
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290456357ce.bed -b /tmp/RtmpTQN7LL/b_32901121a8f9.bed -u
[1] 149
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290102e2cf2.bed -b /tmp/RtmpTQN7LL/b_32904ef4db43.bed -u
[1] 153
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ae1446c.bed -b /tmp/RtmpTQN7LL/b_32902ac2aa4f.bed -u
[1] 171
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329031c389d0.bed -b /tmp/RtmpTQN7LL/b_32905912515f.bed -u
[1] 136
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329055ac96b5.bed -b /tmp/RtmpTQN7LL/b_32904688df18.bed -u
[1] 125
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329035ca14f9.bed -b /tmp/RtmpTQN7LL/b_32902dd26192.bed -u
[1] 131
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329026685b28.bed -b /tmp/RtmpTQN7LL/b_32908752864.bed -u
[1] 163
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902871aff3.bed -b /tmp/RtmpTQN7LL/b_32907dc0594a.bed -u
[1] 112
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903b1c612b.bed -b /tmp/RtmpTQN7LL/b_32902d0362d1.bed -u
[1] 149
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906170c6c9.bed -b /tmp/RtmpTQN7LL/b_32905fbdda35.bed -u
[1] 132
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904ce41864.bed -b /tmp/RtmpTQN7LL/b_3290730a581.bed -u
[1] 151
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d53eeed.bed -b /tmp/RtmpTQN7LL/b_329025a705d3.bed -u
[1] 124
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907dce168c.bed -b /tmp/RtmpTQN7LL/b_32901b7b3038.bed -u
[1] 155
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905c9b58c1.bed -b /tmp/RtmpTQN7LL/b_32902bc94603.bed -u
[1] 127
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903603f629.bed -b /tmp/RtmpTQN7LL/b_329030e7a47b.bed -u
[1] 169
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329026837e66.bed -b /tmp/RtmpTQN7LL/b_32906bc3e67b.bed -u
[1] 144
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329037fbc5a3.bed -b /tmp/RtmpTQN7LL/b_3290707b48b.bed -u
[1] 168
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329027526106.bed -b /tmp/RtmpTQN7LL/b_32904e1d405f.bed -u
[1] 142
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903f28c5b7.bed -b /tmp/RtmpTQN7LL/b_3290853a30c.bed -u
[1] 158
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290516113ca.bed -b /tmp/RtmpTQN7LL/b_32903be016.bed -u
[1] 160
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329042b51f73.bed -b /tmp/RtmpTQN7LL/b_329038aeb8be.bed -u
[1] 134
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290490ba575.bed -b /tmp/RtmpTQN7LL/b_329069f1618d.bed -u
[1] 141
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902006f6c8.bed -b /tmp/RtmpTQN7LL/b_32904ad325ce.bed -u
[1] 140
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905aa6c2cc.bed -b /tmp/RtmpTQN7LL/b_3290656b89b4.bed -u
[1] 117
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290184550d4.bed -b /tmp/RtmpTQN7LL/b_3290446498c1.bed -u
[1] 132
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012b4109a.bed -b /tmp/RtmpTQN7LL/b_32903c13b9ef.bed -u
[1] 142
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902fc58803.bed -b /tmp/RtmpTQN7LL/b_329054804c0b.bed -u
[1] 137
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907cf3a369.bed -b /tmp/RtmpTQN7LL/b_32907f5e4e2f.bed -u
[1] 145
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904f59768f.bed -b /tmp/RtmpTQN7LL/b_3290429a7935.bed -u
[1] 134
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901215aceb.bed -b /tmp/RtmpTQN7LL/b_32902ed5f961.bed -u
[1] 145
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290543af7b9.bed -b /tmp/RtmpTQN7LL/b_32904961b436.bed -u
[1] 173
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c141c21.bed -b /tmp/RtmpTQN7LL/b_32904472ba.bed -u
[1] 138
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a118755.bed -b /tmp/RtmpTQN7LL/b_329065705076.bed -u
[1] 138
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329061cd97c7.bed -b /tmp/RtmpTQN7LL/b_32906e0be039.bed -u
[1] 149
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290360564d5.bed -b /tmp/RtmpTQN7LL/b_32904cfa46c9.bed -u
[1] 166
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329021a09669.bed -b /tmp/RtmpTQN7LL/b_32904d6df221.bed -u
[1] 161
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c5b10e7.bed -b /tmp/RtmpTQN7LL/b_329029fed22.bed -u
[1] 114
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c9d4b81.bed -b /tmp/RtmpTQN7LL/b_3290909c600.bed -u
[1] 135
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290777b7291.bed -b /tmp/RtmpTQN7LL/b_3290d2f801e.bed -u
[1] 150
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d04cf73.bed -b /tmp/RtmpTQN7LL/b_329068f35b1e.bed -u
[1] 114
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329044ec156b.bed -b /tmp/RtmpTQN7LL/b_32907ea921d.bed -u
[1] 131
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903beb69e5.bed -b /tmp/RtmpTQN7LL/b_3290e421de.bed -u
[1] 142
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c6a079d.bed -b /tmp/RtmpTQN7LL/b_3290535cc031.bed -u
[1] 131
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290311d235a.bed -b /tmp/RtmpTQN7LL/b_329050e8201e.bed -u
[1] 132
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905c053c47.bed -b /tmp/RtmpTQN7LL/b_329055c9b84.bed -u
[1] 168
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329069a33f3f.bed -b /tmp/RtmpTQN7LL/b_329066197feb.bed -u
[1] 132
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902221065b.bed -b /tmp/RtmpTQN7LL/b_3290ed6d85c.bed -u
[1] 158
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329060a78741.bed -b /tmp/RtmpTQN7LL/b_3290112edd17.bed -u
[1] 181
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290662cdd81.bed -b /tmp/RtmpTQN7LL/b_3290bc1772b.bed -u
[1] 172
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903e3b622.bed -b /tmp/RtmpTQN7LL/b_329056e31617.bed -u
[1] 153
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329033094284.bed -b /tmp/RtmpTQN7LL/b_32904e4e8630.bed -u
[1] 142
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b4d32e.bed -b /tmp/RtmpTQN7LL/b_32904f95b444.bed -u
[1] 125
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905441cec6.bed -b /tmp/RtmpTQN7LL/b_3290256b872.bed -u
[1] 165
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290612998d7.bed -b /tmp/RtmpTQN7LL/b_3290f159d18.bed -u
[1] 146
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902a7878f5.bed -b /tmp/RtmpTQN7LL/b_32902415554.bed -u
[1] 129
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329043c19079.bed -b /tmp/RtmpTQN7LL/b_32907615b9c0.bed -u
[1] 142
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902700cb12.bed -b /tmp/RtmpTQN7LL/b_3290175354b8.bed -u
[1] 191
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905d1a7589.bed -b /tmp/RtmpTQN7LL/b_32904cd7dbbe.bed -u
[1] 147
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329051c59f7e.bed -b /tmp/RtmpTQN7LL/b_329074186f7.bed -u
[1] 159
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c53ed5.bed -b /tmp/RtmpTQN7LL/b_32905857c193.bed -u
[1] 145
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067c118be.bed -b /tmp/RtmpTQN7LL/b_32902c1e4fe8.bed -u
[1] 155
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067fb8fc6.bed -b /tmp/RtmpTQN7LL/b_329044daf.bed -u
[1] 149
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906bd59183.bed -b /tmp/RtmpTQN7LL/b_3290584f6104.bed -u
[1] 141
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329079b2ba72.bed -b /tmp/RtmpTQN7LL/b_3290412dab8d.bed -u
[1] 154
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290105c8675.bed -b /tmp/RtmpTQN7LL/b_32901ed8ed7.bed -u
[1] 157
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904f89ca8d.bed -b /tmp/RtmpTQN7LL/b_3290698a6c5f.bed -u
[1] 135
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290789e90c8.bed -b /tmp/RtmpTQN7LL/b_32907f5ae6b0.bed -u
[1] 148
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072c9d2cf.bed -b /tmp/RtmpTQN7LL/b_3290568d87cb.bed -u
[1] 148
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901ad4c633.bed -b /tmp/RtmpTQN7LL/b_329061a5e438.bed -u
[1] 155
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901fbac3a0.bed -b /tmp/RtmpTQN7LL/b_329016f9082f.bed -u
[1] 157
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039bb0b42.bed -b /tmp/RtmpTQN7LL/b_3290348d8b1e.bed -u
[1] 143
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901f25d229.bed -b /tmp/RtmpTQN7LL/b_32906fe10d4e.bed -u
[1] 121
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907e7d30b3.bed -b /tmp/RtmpTQN7LL/b_3290617ae165.bed -u
[1] 162
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901052c2c9.bed -b /tmp/RtmpTQN7LL/b_329040ecd04f.bed -u
[1] 163
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904dcd3bf6.bed -b /tmp/RtmpTQN7LL/b_3290472b4963.bed -u
[1] 156
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901797e0a6.bed -b /tmp/RtmpTQN7LL/b_32905bb9d984.bed -u
[1] 134
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905926c1c0.bed -b /tmp/RtmpTQN7LL/b_329040c33e4e.bed -u
[1] 143
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907edf0232.bed -b /tmp/RtmpTQN7LL/b_32902055dbc2.bed -u
[1] 148
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a7a6679.bed -b /tmp/RtmpTQN7LL/b_32905fa35a7e.bed -u
[1] 139
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903d1c2e1a.bed -b /tmp/RtmpTQN7LL/b_329017ec7d4d.bed -u
[1] 126
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906d68f481.bed -b /tmp/RtmpTQN7LL/b_329039c565ab.bed -u
[1] 160
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b9dbf5.bed -b /tmp/RtmpTQN7LL/b_3290481c970.bed -u
[1] 162
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329020d0eb7a.bed -b /tmp/RtmpTQN7LL/b_329064ea515d.bed -u
[1] 145
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901203e68b.bed -b /tmp/RtmpTQN7LL/b_32904f4e7d19.bed -u
[1] 142
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901e300940.bed -b /tmp/RtmpTQN7LL/b_329018fd25ac.bed -u
[1] 116
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905bd60244.bed -b /tmp/RtmpTQN7LL/b_329017a81304.bed -u
[1] 142
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c6d7f1a.bed -b /tmp/RtmpTQN7LL/b_329048588143.bed -u
[1] 145
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290928653.bed -b /tmp/RtmpTQN7LL/b_32906ab4f6ec.bed -u
[1] 145
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329021ccf367.bed -b /tmp/RtmpTQN7LL/b_32907e107485.bed -u
[1] 152
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b02bbbe.bed -b /tmp/RtmpTQN7LL/b_32905d37b55d.bed -u
[1] 120
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290ad86a6.bed -b /tmp/RtmpTQN7LL/b_32901e73d4fd.bed -u
[1] 147
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290469c227e.bed -b /tmp/RtmpTQN7LL/b_32906b1d2c5a.bed -u
[1] 146
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329011d29f59.bed -b /tmp/RtmpTQN7LL/b_3290d292a86.bed -u
[1] 170
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329078a774e1.bed -b /tmp/RtmpTQN7LL/b_329076ca8662.bed -u
[1] 155
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903879d1d1.bed -b /tmp/RtmpTQN7LL/b_32904933711b.bed -u
[1] 147
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906aa9a47c.bed -b /tmp/RtmpTQN7LL/b_32901cd8e7bb.bed -u
[1] 159
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907190f2d2.bed -b /tmp/RtmpTQN7LL/b_32906964e825.bed -u
[1] 122
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906b3e0617.bed -b /tmp/RtmpTQN7LL/b_32901b318935.bed -u
[1] 143
[1] "101 ctrl number"
$disease
[1] "T2D"

$fg.val
[1] 278

$bg.stdev
[1] 1.574513

$bg.mean
[1] 145.49

$z.score
[1] 84.15938

$p.val
[1] 0

$significant
[1] "yes"

$cell.type
[1] "Delta"

   disease fg.val  bg.stdev bg.mean   z.score
1      T1D    112 2.2717136  157.82 -20.16980
2      T1D     84 1.2036187   68.83  12.60366
3      T1D    103 1.1415615   65.13  33.17386
4      T1D    107 1.2580231   71.98  27.83733
5      T1D     76 1.0858595   56.90  17.58975
6      T1D     63 0.9678071   46.54  17.00752
7     <NA>    211 2.7078442  322.52 -41.18405
8     <NA>    298 1.5293875  139.42 103.68857
9     <NA>    311 1.4358509  131.57 124.96423
10    <NA>    278 1.5745126  145.49  84.15938
                                                                                                                                                                                                                                                       p.val
1  1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2  0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5  0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
6  0.0000000000000000000000000000000000000000000000000000000000000000361143175379509856604364131827627416166015383339051586100548604315140162794102765186701028962732703072170209041856316722141351501948475111563999063188090490498583298717427680912805954
7  1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
   significant      cell.type
1           no RightVentricle
2         <NA>           <NA>
3         <NA>           <NA>
4         <NA>           <NA>
5         <NA>           <NA>
6         <NA>           <NA>
7           no RightVentricle
8         <NA>           <NA>
9         <NA>           <NA>
10        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a0d8170.bed -b /tmp/RtmpTQN7LL/b_3290729a6db2.bed -u
[1] 235
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904f438d73.bed -b /tmp/RtmpTQN7LL/b_32906405b946.bed -u
[1] 125
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907373ce84.bed -b /tmp/RtmpTQN7LL/b_3290687014d7.bed -u
[1] 87
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902799a5f4.bed -b /tmp/RtmpTQN7LL/b_3290442fa67e.bed -u
[1] 120
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904395bbd2.bed -b /tmp/RtmpTQN7LL/b_32907bd0162f.bed -u
[1] 120
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904ac08d5b.bed -b /tmp/RtmpTQN7LL/b_32902edebf7b.bed -u
[1] 124
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c81dbd2.bed -b /tmp/RtmpTQN7LL/b_32902ee03a3.bed -u
[1] 115
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907b7cc59e.bed -b /tmp/RtmpTQN7LL/b_32902bc82fd5.bed -u
[1] 95
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903b7d196e.bed -b /tmp/RtmpTQN7LL/b_32906bc2afed.bed -u
[1] 107
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ad1564.bed -b /tmp/RtmpTQN7LL/b_329015b015f7.bed -u
[1] 118
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290639a6d6f.bed -b /tmp/RtmpTQN7LL/b_3290628c0542.bed -u
[1] 95
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329052800c6e.bed -b /tmp/RtmpTQN7LL/b_32901ca23f2c.bed -u
[1] 112
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048302c2.bed -b /tmp/RtmpTQN7LL/b_3290264e4d67.bed -u
[1] 89
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905932d2c4.bed -b /tmp/RtmpTQN7LL/b_32901636e58a.bed -u
[1] 127
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329013b025ae.bed -b /tmp/RtmpTQN7LL/b_329057b8a2a7.bed -u
[1] 99
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290114d15da.bed -b /tmp/RtmpTQN7LL/b_32909199a48.bed -u
[1] 124
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a9b95fb.bed -b /tmp/RtmpTQN7LL/b_329046b9e241.bed -u
[1] 112
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901fea180c.bed -b /tmp/RtmpTQN7LL/b_32906e2750db.bed -u
[1] 144
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290411efa69.bed -b /tmp/RtmpTQN7LL/b_32905e5be48f.bed -u
[1] 114
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329037d51d7c.bed -b /tmp/RtmpTQN7LL/b_32906bcf0311.bed -u
[1] 134
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290416ff57.bed -b /tmp/RtmpTQN7LL/b_329069dea6ef.bed -u
[1] 109
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290e0cec15.bed -b /tmp/RtmpTQN7LL/b_329040b00452.bed -u
[1] 139
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290572f7ee7.bed -b /tmp/RtmpTQN7LL/b_3290290d100b.bed -u
[1] 126
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b048038.bed -b /tmp/RtmpTQN7LL/b_32902c35f49a.bed -u
[1] 108
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290256015c0.bed -b /tmp/RtmpTQN7LL/b_32901a1c920e.bed -u
[1] 120
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329035fcba7b.bed -b /tmp/RtmpTQN7LL/b_32908f56fb5.bed -u
[1] 111
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329051657195.bed -b /tmp/RtmpTQN7LL/b_32902bbe5a37.bed -u
[1] 97
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290594e2637.bed -b /tmp/RtmpTQN7LL/b_32907a7197f0.bed -u
[1] 110
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329029d4823d.bed -b /tmp/RtmpTQN7LL/b_32906a9e5b.bed -u
[1] 122
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907e0337f3.bed -b /tmp/RtmpTQN7LL/b_329052611fde.bed -u
[1] 120
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905237575e.bed -b /tmp/RtmpTQN7LL/b_329022447a3d.bed -u
[1] 115
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902db09783.bed -b /tmp/RtmpTQN7LL/b_3290be2f5a3.bed -u
[1] 107
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290558c13a0.bed -b /tmp/RtmpTQN7LL/b_32903c436dec.bed -u
[1] 120
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907d95c5eb.bed -b /tmp/RtmpTQN7LL/b_3290344cc7c4.bed -u
[1] 135
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a7277d7.bed -b /tmp/RtmpTQN7LL/b_32904dcda34d.bed -u
[1] 112
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329067c74ef9.bed -b /tmp/RtmpTQN7LL/b_32904baf9aa7.bed -u
[1] 111
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329058389cee.bed -b /tmp/RtmpTQN7LL/b_329051cf38b5.bed -u
[1] 131
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329071c0dca6.bed -b /tmp/RtmpTQN7LL/b_3290331887aa.bed -u
[1] 133
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903958b96c.bed -b /tmp/RtmpTQN7LL/b_32901b63f040.bed -u
[1] 130
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907f966905.bed -b /tmp/RtmpTQN7LL/b_32907ef3a3b.bed -u
[1] 94
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290341bc7ac.bed -b /tmp/RtmpTQN7LL/b_3290ee4af5d.bed -u
[1] 94
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329078a79227.bed -b /tmp/RtmpTQN7LL/b_329053f50c76.bed -u
[1] 126
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b183c53.bed -b /tmp/RtmpTQN7LL/b_32901abcdcf0.bed -u
[1] 95
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039e6dc4.bed -b /tmp/RtmpTQN7LL/b_329075711dd2.bed -u
[1] 111
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290189d52a7.bed -b /tmp/RtmpTQN7LL/b_3290bb999f4.bed -u
[1] 113
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901ffeeff4.bed -b /tmp/RtmpTQN7LL/b_32905d0272e4.bed -u
[1] 107
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290642eb3ea.bed -b /tmp/RtmpTQN7LL/b_3290f75d268.bed -u
[1] 109
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290546bdbba.bed -b /tmp/RtmpTQN7LL/b_32905638254f.bed -u
[1] 131
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329035e1adf2.bed -b /tmp/RtmpTQN7LL/b_3290767c3091.bed -u
[1] 105
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290233b1082.bed -b /tmp/RtmpTQN7LL/b_3290a64afb0.bed -u
[1] 134
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290327c02bc.bed -b /tmp/RtmpTQN7LL/b_3290547ac9cb.bed -u
[1] 149
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902ef98254.bed -b /tmp/RtmpTQN7LL/b_329034ba7ece.bed -u
[1] 149
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290507df75f.bed -b /tmp/RtmpTQN7LL/b_32904d7b0c25.bed -u
[1] 121
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32908c29927.bed -b /tmp/RtmpTQN7LL/b_32901ca41f95.bed -u
[1] 115
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903bcaed07.bed -b /tmp/RtmpTQN7LL/b_3290497b5a0.bed -u
[1] 96
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904807cbc9.bed -b /tmp/RtmpTQN7LL/b_329037b8da81.bed -u
[1] 111
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901211536e.bed -b /tmp/RtmpTQN7LL/b_329029f0b171.bed -u
[1] 118
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b7c0ac.bed -b /tmp/RtmpTQN7LL/b_3290338a700b.bed -u
[1] 101
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901b7d3050.bed -b /tmp/RtmpTQN7LL/b_32907990fda7.bed -u
[1] 111
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290342407c2.bed -b /tmp/RtmpTQN7LL/b_329048f62b8a.bed -u
[1] 149
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329059eada6f.bed -b /tmp/RtmpTQN7LL/b_32901f12916b.bed -u
[1] 114
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329028de1b32.bed -b /tmp/RtmpTQN7LL/b_3290658e02c2.bed -u
[1] 128
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901c119716.bed -b /tmp/RtmpTQN7LL/b_32901f95afa6.bed -u
[1] 114
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903ae0b1fe.bed -b /tmp/RtmpTQN7LL/b_329018276a31.bed -u
[1] 122
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906702dbb.bed -b /tmp/RtmpTQN7LL/b_32904c3d3e8.bed -u
[1] 120
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c7c4792.bed -b /tmp/RtmpTQN7LL/b_3290634a627c.bed -u
[1] 122
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329066ac66cd.bed -b /tmp/RtmpTQN7LL/b_329060aaac89.bed -u
[1] 118
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901903384b.bed -b /tmp/RtmpTQN7LL/b_329067f9e12e.bed -u
[1] 125
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f3c51b6.bed -b /tmp/RtmpTQN7LL/b_32904e5861a5.bed -u
[1] 105
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329073ac80d8.bed -b /tmp/RtmpTQN7LL/b_329077808b8a.bed -u
[1] 124
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290148ebdeb.bed -b /tmp/RtmpTQN7LL/b_3290487b4ab8.bed -u
[1] 108
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b754053.bed -b /tmp/RtmpTQN7LL/b_329056b9731e.bed -u
[1] 118
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c265b6a.bed -b /tmp/RtmpTQN7LL/b_329079e6caf5.bed -u
[1] 115
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329024734c1d.bed -b /tmp/RtmpTQN7LL/b_329073df0c04.bed -u
[1] 111
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053a22fb6.bed -b /tmp/RtmpTQN7LL/b_3290552093e6.bed -u
[1] 103
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290375727a4.bed -b /tmp/RtmpTQN7LL/b_329040878f3.bed -u
[1] 120
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902fcc625f.bed -b /tmp/RtmpTQN7LL/b_329029f9d9a1.bed -u
[1] 137
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290114fd453.bed -b /tmp/RtmpTQN7LL/b_329076173752.bed -u
[1] 109
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902dd842e5.bed -b /tmp/RtmpTQN7LL/b_32901422161e.bed -u
[1] 108
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290471a85c.bed -b /tmp/RtmpTQN7LL/b_32909e63890.bed -u
[1] 113
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902fea9637.bed -b /tmp/RtmpTQN7LL/b_32905abf484f.bed -u
[1] 126
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906e086dbf.bed -b /tmp/RtmpTQN7LL/b_329067f77415.bed -u
[1] 111
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290ebb3b26.bed -b /tmp/RtmpTQN7LL/b_32903913f427.bed -u
[1] 92
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905081c0b1.bed -b /tmp/RtmpTQN7LL/b_32904fc1cb54.bed -u
[1] 124
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b6a4e41.bed -b /tmp/RtmpTQN7LL/b_3290421261a9.bed -u
[1] 116
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329080a19be.bed -b /tmp/RtmpTQN7LL/b_32906256a76b.bed -u
[1] 109
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902c719764.bed -b /tmp/RtmpTQN7LL/b_3290170005ca.bed -u
[1] 118
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329068a5123b.bed -b /tmp/RtmpTQN7LL/b_32904ecfb634.bed -u
[1] 92
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903fd0b262.bed -b /tmp/RtmpTQN7LL/b_329087f49be.bed -u
[1] 115
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329072ee411d.bed -b /tmp/RtmpTQN7LL/b_3290788420d8.bed -u
[1] 127
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c33d3b9.bed -b /tmp/RtmpTQN7LL/b_3290151e42c2.bed -u
[1] 118
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907a7410f2.bed -b /tmp/RtmpTQN7LL/b_32906dc1f04f.bed -u
[1] 110
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329034765a4d.bed -b /tmp/RtmpTQN7LL/b_3290250b9633.bed -u
[1] 95
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290651fb3f4.bed -b /tmp/RtmpTQN7LL/b_3290173b9f50.bed -u
[1] 122
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906a9b6e4d.bed -b /tmp/RtmpTQN7LL/b_32902cfe9ce4.bed -u
[1] 121
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329065a75475.bed -b /tmp/RtmpTQN7LL/b_3290655bf566.bed -u
[1] 124
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329058d91c10.bed -b /tmp/RtmpTQN7LL/b_329070f2a1ee.bed -u
[1] 128
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329020698165.bed -b /tmp/RtmpTQN7LL/b_32905e7bdf57.bed -u
[1] 108
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290519bf1a3.bed -b /tmp/RtmpTQN7LL/b_329038804153.bed -u
[1] 132
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290516731ef.bed -b /tmp/RtmpTQN7LL/b_3290202ee17.bed -u
[1] 92
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329032dfe4bb.bed -b /tmp/RtmpTQN7LL/b_32902700b670.bed -u
[1] 120
[1] "101 ctrl number"
$disease
[1] "T2D"

$fg.val
[1] 235

$bg.stdev
[1] 1.334053

$bg.mean
[1] 115.9

$z.score
[1] 89.27682

$p.val
[1] 0

$significant
[1] "yes"

$cell.type
[1] "Endocrine_Progenitor"

   disease fg.val  bg.stdev bg.mean   z.score
1      T1D    112 2.2717136  157.82 -20.16980
2      T1D     84 1.2036187   68.83  12.60366
3      T1D    103 1.1415615   65.13  33.17386
4      T1D    107 1.2580231   71.98  27.83733
5      T1D     76 1.0858595   56.90  17.58975
6      T1D     63 0.9678071   46.54  17.00752
7     <NA>    211 2.7078442  322.52 -41.18405
8     <NA>    298 1.5293875  139.42 103.68857
9     <NA>    311 1.4358509  131.57 124.96423
10    <NA>    278 1.5745126  145.49  84.15938
11    <NA>    235 1.3340528  115.90  89.27682
                                                                                                                                                                                                                                                       p.val
1  1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2  0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5  0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
6  0.0000000000000000000000000000000000000000000000000000000000000000361143175379509856604364131827627416166015383339051586100548604315140162794102765186701028962732703072170209041856316722141351501948475111563999063188090490498583298717427680912805954
7  1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
   significant      cell.type
1           no RightVentricle
2         <NA>           <NA>
3         <NA>           <NA>
4         <NA>           <NA>
5         <NA>           <NA>
6         <NA>           <NA>
7           no RightVentricle
8         <NA>           <NA>
9         <NA>           <NA>
10        <NA>           <NA>
11        <NA>           <NA>
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Overlapping regions can cause unexpected results.
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... PASS
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329039d3d968.bed -b /tmp/RtmpTQN7LL/b_329049bb4db1.bed -u
[1] 209
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32908c940e5.bed -b /tmp/RtmpTQN7LL/b_32905edead41.bed -u
[1] 104
[1] "2 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329063ea6fee.bed -b /tmp/RtmpTQN7LL/b_32905871d1b2.bed -u
[1] 76
[1] "3 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329016f9e2ba.bed -b /tmp/RtmpTQN7LL/b_32902ff52c6f.bed -u
[1] 95
[1] "4 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904c8d5b94.bed -b /tmp/RtmpTQN7LL/b_3290239003b1.bed -u
[1] 109
[1] "5 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329051ffff16.bed -b /tmp/RtmpTQN7LL/b_32903d480c09.bed -u
[1] 99
[1] "6 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903fd4ddf1.bed -b /tmp/RtmpTQN7LL/b_32904183012b.bed -u
[1] 99
[1] "7 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906e98f5fc.bed -b /tmp/RtmpTQN7LL/b_3290d0bedf1.bed -u
[1] 80
[1] "8 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290ff45217.bed -b /tmp/RtmpTQN7LL/b_329011d1af86.bed -u
[1] 84
[1] "9 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329017093744.bed -b /tmp/RtmpTQN7LL/b_32903f4e2cd1.bed -u
[1] 110
[1] "10 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f7dfba1.bed -b /tmp/RtmpTQN7LL/b_3290deea50b.bed -u
[1] 79
[1] "11 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290532702dd.bed -b /tmp/RtmpTQN7LL/b_329096c4e6.bed -u
[1] 92
[1] "12 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022ded1c7.bed -b /tmp/RtmpTQN7LL/b_32901073ff78.bed -u
[1] 68
[1] "13 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907bae82c7.bed -b /tmp/RtmpTQN7LL/b_32905ccd5de.bed -u
[1] 96
[1] "14 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329053d0826d.bed -b /tmp/RtmpTQN7LL/b_3290e62d29d.bed -u
[1] 73
[1] "15 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902d39a46b.bed -b /tmp/RtmpTQN7LL/b_329064ac3e4b.bed -u
[1] 92
[1] "16 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329043302286.bed -b /tmp/RtmpTQN7LL/b_3290450ce515.bed -u
[1] 93
[1] "17 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905991a2e0.bed -b /tmp/RtmpTQN7LL/b_32901d4c8bad.bed -u
[1] 104
[1] "18 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290276e47bc.bed -b /tmp/RtmpTQN7LL/b_329042bbc2d.bed -u
[1] 90
[1] "19 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290615f7938.bed -b /tmp/RtmpTQN7LL/b_32906aaeb989.bed -u
[1] 109
[1] "20 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290597286f2.bed -b /tmp/RtmpTQN7LL/b_3290546f3607.bed -u
[1] 92
[1] "21 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902bf17a77.bed -b /tmp/RtmpTQN7LL/b_32905ca38f6.bed -u
[1] 112
[1] "22 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290793ab33d.bed -b /tmp/RtmpTQN7LL/b_3290f686779.bed -u
[1] 102
[1] "23 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329058002553.bed -b /tmp/RtmpTQN7LL/b_3290679ab3b8.bed -u
[1] 90
[1] "24 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019839553.bed -b /tmp/RtmpTQN7LL/b_329079adb054.bed -u
[1] 101
[1] "25 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f98acc4.bed -b /tmp/RtmpTQN7LL/b_329023632b04.bed -u
[1] 88
[1] "26 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901cb62a4b.bed -b /tmp/RtmpTQN7LL/b_32907fcfe40a.bed -u
[1] 84
[1] "27 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904855a359.bed -b /tmp/RtmpTQN7LL/b_3290175fbba2.bed -u
[1] 84
[1] "28 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905db26123.bed -b /tmp/RtmpTQN7LL/b_329025b9d0b3.bed -u
[1] 107
[1] "29 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290a822744.bed -b /tmp/RtmpTQN7LL/b_32907c8198b1.bed -u
[1] 96
[1] "30 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903466a938.bed -b /tmp/RtmpTQN7LL/b_329045dbd205.bed -u
[1] 101
[1] "31 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329014eca36e.bed -b /tmp/RtmpTQN7LL/b_32904e625f12.bed -u
[1] 89
[1] "32 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290c2a7fbb.bed -b /tmp/RtmpTQN7LL/b_329010f8ed02.bed -u
[1] 101
[1] "33 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c6b52c2.bed -b /tmp/RtmpTQN7LL/b_32907d17cd58.bed -u
[1] 103
[1] "34 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903f30e7a3.bed -b /tmp/RtmpTQN7LL/b_32906f017d65.bed -u
[1] 87
[1] "35 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d853f8e.bed -b /tmp/RtmpTQN7LL/b_3290295bc809.bed -u
[1] 88
[1] "36 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904bd5fef1.bed -b /tmp/RtmpTQN7LL/b_329039e91fc7.bed -u
[1] 109
[1] "37 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329065bdbabf.bed -b /tmp/RtmpTQN7LL/b_3290594e3ceb.bed -u
[1] 121
[1] "38 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329016c76e7e.bed -b /tmp/RtmpTQN7LL/b_32906ff00992.bed -u
[1] 102
[1] "39 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290106fad96.bed -b /tmp/RtmpTQN7LL/b_3290567fa86e.bed -u
[1] 77
[1] "40 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290829a881.bed -b /tmp/RtmpTQN7LL/b_329053468984.bed -u
[1] 78
[1] "41 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905823028a.bed -b /tmp/RtmpTQN7LL/b_32905c8ae95c.bed -u
[1] 101
[1] "42 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329043eabeed.bed -b /tmp/RtmpTQN7LL/b_329050274238.bed -u
[1] 76
[1] "43 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903dc2d78b.bed -b /tmp/RtmpTQN7LL/b_329036130ad0.bed -u
[1] 89
[1] "44 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290817099d.bed -b /tmp/RtmpTQN7LL/b_32901c9802d4.bed -u
[1] 101
[1] "45 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329048b67a30.bed -b /tmp/RtmpTQN7LL/b_329073fabef.bed -u
[1] 86
[1] "46 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905065f043.bed -b /tmp/RtmpTQN7LL/b_32903ce5f647.bed -u
[1] 93
[1] "47 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901a379707.bed -b /tmp/RtmpTQN7LL/b_32904d406383.bed -u
[1] 106
[1] "48 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902b6e9643.bed -b /tmp/RtmpTQN7LL/b_32905444df26.bed -u
[1] 85
[1] "49 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902f57efda.bed -b /tmp/RtmpTQN7LL/b_32906e8df0b8.bed -u
[1] 109
[1] "50 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904e8afb11.bed -b /tmp/RtmpTQN7LL/b_329013a1e2ef.bed -u
[1] 130
[1] "51 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904d0e24a.bed -b /tmp/RtmpTQN7LL/b_3290e3f673b.bed -u
[1] 134
[1] "52 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329018fe63a5.bed -b /tmp/RtmpTQN7LL/b_32901931f670.bed -u
[1] 109
[1] "53 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290a427329.bed -b /tmp/RtmpTQN7LL/b_32903aacbf1f.bed -u
[1] 94
[1] "54 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290676212f7.bed -b /tmp/RtmpTQN7LL/b_32907989cc91.bed -u
[1] 72
[1] "55 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902710ae57.bed -b /tmp/RtmpTQN7LL/b_3290299f2228.bed -u
[1] 93
[1] "56 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907176d0b7.bed -b /tmp/RtmpTQN7LL/b_329044da013.bed -u
[1] 98
[1] "57 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290682d77d0.bed -b /tmp/RtmpTQN7LL/b_3290472d393d.bed -u
[1] 76
[1] "58 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902afd84bd.bed -b /tmp/RtmpTQN7LL/b_32901bbc8ef6.bed -u
[1] 97
[1] "59 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329040023db8.bed -b /tmp/RtmpTQN7LL/b_3290619d9bb2.bed -u
[1] 129
[1] "60 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290fb6e923.bed -b /tmp/RtmpTQN7LL/b_329041151268.bed -u
[1] 106
[1] "61 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906c29f80b.bed -b /tmp/RtmpTQN7LL/b_32905ce67b3.bed -u
[1] 101
[1] "62 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907fe20ccb.bed -b /tmp/RtmpTQN7LL/b_3290d6ee3ba.bed -u
[1] 96
[1] "63 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329011efbfaf.bed -b /tmp/RtmpTQN7LL/b_32904a9fd870.bed -u
[1] 102
[1] "64 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904fb8f1ff.bed -b /tmp/RtmpTQN7LL/b_329075a3c2d9.bed -u
[1] 91
[1] "65 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329016a698df.bed -b /tmp/RtmpTQN7LL/b_32903b73fa29.bed -u
[1] 109
[1] "66 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290125eb7d9.bed -b /tmp/RtmpTQN7LL/b_3290343d5dbd.bed -u
[1] 102
[1] "67 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329012a56f03.bed -b /tmp/RtmpTQN7LL/b_329068c7531d.bed -u
[1] 101
[1] "68 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290682beb1e.bed -b /tmp/RtmpTQN7LL/b_3290581f65.bed -u
[1] 83
[1] "69 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905b6ceb0f.bed -b /tmp/RtmpTQN7LL/b_32907e6bf01f.bed -u
[1] 99
[1] "70 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906d5156e1.bed -b /tmp/RtmpTQN7LL/b_329060eb9c85.bed -u
[1] 86
[1] "71 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290562375a9.bed -b /tmp/RtmpTQN7LL/b_3290f7612ef.bed -u
[1] 88
[1] "72 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290394389f.bed -b /tmp/RtmpTQN7LL/b_32901cc5c71a.bed -u
[1] 93
[1] "73 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329077955540.bed -b /tmp/RtmpTQN7LL/b_32901761b353.bed -u
[1] 92
[1] "74 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290665f26ad.bed -b /tmp/RtmpTQN7LL/b_32902a587cd1.bed -u
[1] 76
[1] "75 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019c72687.bed -b /tmp/RtmpTQN7LL/b_3290155745cf.bed -u
[1] 102
[1] "76 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329041c8110c.bed -b /tmp/RtmpTQN7LL/b_32905b646302.bed -u
[1] 119
[1] "77 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329073459103.bed -b /tmp/RtmpTQN7LL/b_329021baa2ae.bed -u
[1] 90
[1] "78 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904e62fe42.bed -b /tmp/RtmpTQN7LL/b_32907adef02e.bed -u
[1] 87
[1] "79 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902ab13c01.bed -b /tmp/RtmpTQN7LL/b_32907914cede.bed -u
[1] 79
[1] "80 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329022b3edc7.bed -b /tmp/RtmpTQN7LL/b_3290689ddd4c.bed -u
[1] 101
[1] "81 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906ba7d046.bed -b /tmp/RtmpTQN7LL/b_3290444ccc91.bed -u
[1] 94
[1] "82 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901d9fd36.bed -b /tmp/RtmpTQN7LL/b_32901f34b46e.bed -u
[1] 81
[1] "83 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906fbff402.bed -b /tmp/RtmpTQN7LL/b_329029eae304.bed -u
[1] 93
[1] "84 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32907f9e4342.bed -b /tmp/RtmpTQN7LL/b_329074c3f13f.bed -u
[1] 93
[1] "85 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329014c930d2.bed -b /tmp/RtmpTQN7LL/b_32902e350c56.bed -u
[1] 98
[1] "86 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329044ed64f2.bed -b /tmp/RtmpTQN7LL/b_32901beed609.bed -u
[1] 89
[1] "87 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32904930f863.bed -b /tmp/RtmpTQN7LL/b_3290318d21e5.bed -u
[1] 74
[1] "88 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290159bd209.bed -b /tmp/RtmpTQN7LL/b_32903a961b48.bed -u
[1] 101
[1] "89 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329017238c14.bed -b /tmp/RtmpTQN7LL/b_3290461f8ae9.bed -u
[1] 97
[1] "90 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32901bca17bf.bed -b /tmp/RtmpTQN7LL/b_329074a7e98a.bed -u
[1] 102
[1] "91 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290f4dadb3.bed -b /tmp/RtmpTQN7LL/b_32906d8ac31b.bed -u
[1] 87
[1] "92 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32905507fb4e.bed -b /tmp/RtmpTQN7LL/b_32901f1e3fb7.bed -u
[1] 83
[1] "93 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903c6210c.bed -b /tmp/RtmpTQN7LL/b_32907c2d118d.bed -u
[1] 102
[1] "94 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290690cb536.bed -b /tmp/RtmpTQN7LL/b_3290566e2f4c.bed -u
[1] 107
[1] "95 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32902bb0a6fa.bed -b /tmp/RtmpTQN7LL/b_329073e58b06.bed -u
[1] 86
[1] "96 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32906fed335b.bed -b /tmp/RtmpTQN7LL/b_32903dc11331.bed -u
[1] 103
[1] "97 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329017132a2b.bed -b /tmp/RtmpTQN7LL/b_3290453dc85e.bed -u
[1] 84
[1] "98 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_329019f544b9.bed -b /tmp/RtmpTQN7LL/b_3290239e85d3.bed -u
[1] 106
[1] "99 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_32903177b020.bed -b /tmp/RtmpTQN7LL/b_32904b54b3ce.bed -u
[1] 78
[1] "100 ctrl number"
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
SORTING
VALIDATE REGIONS
 * Checking input type... PASS
   Input is in index format
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Processing input (1): a
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
 * Processing input (2): b
CONVERT TO BED
 * Checking input type... PASS
   Input is in index format
VALIDATE REGIONS
 * Check if index is a string... PASS
 * Check index pattern... PASS
 * Check for missing values... PASS
 * Check for larger start position... PASS.
 * Check if zero based... PASS
 * Checking sort order... PASS
 * Checking for overlapping 'contiguous' regions... FAIL
   The input for object has overlapping features!
   This can cause unexpected results for some set operations.
   i.e. x <- bedr.merge.region(x)
   bedtools intersect -a /tmp/RtmpTQN7LL/a_3290251af233.bed -b /tmp/RtmpTQN7LL/b_329072d70ad6.bed -u
[1] 103
[1] "101 ctrl number"
$disease
[1] "T2D"

$fg.val
[1] 209

$bg.stdev
[1] 1.262099

$bg.mean
[1] 95.06

$z.score
[1] 90.27821

$p.val
[1] 0

$significant
[1] "yes"

$cell.type
[1] "Epsilon"

   disease fg.val  bg.stdev bg.mean   z.score
1      T1D    112 2.2717136  157.82 -20.16980
2      T1D     84 1.2036187   68.83  12.60366
3      T1D    103 1.1415615   65.13  33.17386
4      T1D    107 1.2580231   71.98  27.83733
5      T1D     76 1.0858595   56.90  17.58975
6      T1D     63 0.9678071   46.54  17.00752
7     <NA>    211 2.7078442  322.52 -41.18405
8     <NA>    298 1.5293875  139.42 103.68857
9     <NA>    311 1.4358509  131.57 124.96423
10    <NA>    278 1.5745126  145.49  84.15938
11    <NA>    235 1.3340528  115.90  89.27682
12    <NA>    209 1.2620986   95.06  90.27821
                                                                                                                                                                                                                                                       p.val
1  1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2  0.0000000000000000000000000000000000010078559079999662031200391173171896396289339501346347682035395004415805882256719570819154669348051422961276557543897069990634918212890625000000000000000000000000000000000000000000000000000000000000000000000000000
3  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001282656
4  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076683007445534947087334943707957992842014397888006355970225843465658198300830
5  0.0000000000000000000000000000000000000000000000000000000000000000000014758269182081363976023067301882499619581479163654378552422951889744428106968132818903839145513312374441594150397127479353913492843455667464315666177575729478845973914429012818772
6  0.0000000000000000000000000000000000000000000000000000000000000000361143175379509856604364131827627416166015383339051586100548604315140162794102765186701028962732703072170209041856316722141351501948475111563999063188090490498583298717427680912805954
7  1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9  0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
12 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
   significant      cell.type
1           no RightVentricle
2         <NA>           <NA>
3         <NA>           <NA>
4         <NA>           <NA>
5         <NA>           <NA>
6         <NA>           <NA>
7           no RightVentricle
8         <NA>           <NA>
9         <NA>           <NA>
10        <NA>           <NA>
11        <NA>           <NA>
12        <NA>           <NA>
There were 26 warnings (use warnings() to see them)
